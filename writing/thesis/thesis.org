#+AUTHOR: Jeremy Barisch-Rooney
#+TITLE: Damage Detection of Concrete Slab Bridges
#+OPTIONS: toc:nil
#+LATEX_HEADER: \usepackage{commath}
#+LATEX_HEADER: \usemintedstyle{emacs}
#+LATEX_HEADER: \usepackage[margin=1in=]{geometry}
#+LATEX_HEADER: \usepackage{placeins}
#+LATEX_HEADER: \usepackage{siunitx}
#+LATEX_HEADER: \usepackage[square, numbers]{natbib}
#+LATEX_HEADER: \usepackage{xcolor}

# ./cli.sh --save --mesh full contour cover-photo --x 85 --deform 3.5
[[../../saved-generated-data-images/bridge-705-full-3d/healthy/cover-photo/cover-photo-cropped.pdf]]

#+LATEX: \newpage
#+LATEX: \section*{Acknowledgements}
I would like to thank...

\textcolor{red}{TODO: Acknowledgements}
#+LATEX: \newpage
#+LATEX: \tableofcontents
#+LATEX: \newpage
#+LATEX: \listoffigures
#+LATEX: \newpage
#+LATEX: \listoflistings
#+LATEX: \newpage
#+LATEX: \listoftables
#+LATEX: \newpage

# ./cli.sh --mesh med --save-to /z/saved-med simulate uls

# ./cli.sh --mesh med --save-to /z/saved-verify --shorten-paths true verify comp-responses

# ./cli.sh --mesh full --save-to /z/saved-diana-comp validate diana-comp

# Move folder up one level.
# ./cli.sh --mesh med --save-to /z/saved-sensors-med --shorten-paths true validate sensors

# ./cli.sh --mesh full --save-to /z/jeremy/per-sensors-full --shorten-paths true validate sensors

# ./cli.sh --mesh full --save-to /z/saved-piers --two-materials validate pier-disp

# ./cli.sh --shorten-paths false --save-to /Volumes/THESIS/pier-5-convergence
# validate pier-conv --pier 5 --max-nodes 100000 --without-radius 2 --nesw-loc 0
# --nesw-max-dist 5 --max-shell-len 2 --min-shell-len 0.35

# ./cli.sh --mesh low --save-to /z/throwaway --two-materials validate thermal

# ./cli.sh --mesh med --save-to /z/param-uls --shorten-paths true params param-uls

# On MBP.
# ./cli.sh params noise
# ./cli.sh classify temp-effect-4

* Introduction

# Motivation of the research question.
The probability of a bridge to fail increases over time until it is no longer
considered safe for use. Maintenance of a bridge is typically carried out when
something goes wrong or according to a preventative maintenance schedule based
on expert knowledge, neither approach making the best use of limited maintenance
resources. The Nanfang'ao bridge collapse in Taiwan on 1 October 2019 in which 6
people were killed and 12 were injured is a recent example of the importance of
maintainence of civil infrastructure. The bridge was only twenty years old.

# Thesis questions.
Sensors can provide real-time information without the delay or cost of a manual
maintenance check. How can we detect damage on a no-prestress no-postension
concrete slab bridge? This question is the topic of this thesis. In order to
answer this question we must first answer the question of how can we collect
sensor data for the purpose of damage detection? Only then can we answer the
question of how can we detect damage in the acquired data. Related but less
central questions include: how does the installed sensor configuration affect
the ability to detect damage, and how could such a damage detection system be
installed for the purpose of real-time structural health monitoring (SHM)?

# is the What are the costs and benefits of installing a decision support system
# (DSS) based on real-time sensor data for the purpose of maintenance of a
# no-prestress no-postension concrete slab bridge? What analyses of sensor data do
# and do not provide valuable information to the user of a DSS? And what are the
# costs and benefits of installing different types and quantites of sensors on a
# bridge?

# Necessary to simulate sensor data with a FEM.
In order to classify data as coming from either a damaged or healthy bridge it
is of course necessary to have sensor data corresponding to both the damaged and
healthy state of the bridge, otherwise we could not evaluate the accuracy of the
classification techniques applied. Due to the fact that bridges are expensive
structures, it is unsurprisingly not permitted in the general case to apply
damage to a bridge. The use of finite element (FE) software allows us to create
a simulation of a bridge to which damage can be applied. Sensor data can be
collected from the FE simulation for the purpose of damage classification.

# OpenSees FEM (sensor data) to collect data.
OpenSees (The Open System for Earthquake Engineering Simulation) is an
open-source FE software package that anyone with a Windows, macOS or Linux
machine, and an internet connection, can download and install. Depending on
open-source rather than proprietary FE software enables users to explore,
extend, or reproduce this research without having to acquire an expensive
proprietary licence. All sensor data that is used for damage detection in this
thesis is generated with the open-source program OpenSees.

# A FEM (sensor data) is different from reality.
A finite element model (FEM) is a model of a structure in software. All models
are wrong but some are useful cite:box1979robustness. The sensor data that is
generated with FE software will be different from sensor data collected from a
real bridge, due to environmental and operational effects. However the simulated
sensor data should be close enough to real data to provide confidence that the
damage detection applied can also work with real sensor data, while acknowleding
that some additional work would likely be needed to tune the anaysis techniques
once real sensor data is available. It is thus necessary to validate the FE
model and simulated sensor data in order to provide confidence in the damage
detection methods applied to the data.

# Validation of point loads.
A FEM of the no-prestress no-postension concrete slab bridge, bridge 705, in
Amsterdam was available at TNO (Netherlands Organisation for Applied Scientific
Research) for the proprietary FE software package Diana. This FEM was previously
validated against measurements from an experimental campaign. The existence of a
validated FEM for bridge 705 allows the FEM for OpenSees to be validated by
comparing responses under the same loading conditions in the two models. Sensor
data collected with OpenSees is also compared directly to the measurements from
static load tests in the experimental campaign.

# Validation of temperature and pier settlement.
An important environmental effect to consider is that of temperature. When a
structure is heated up it will expand and when it cools down it will contract.
In a structure such as a bridge where movement is constrained at the piers and
abutments, forces will build up due to the thermal expansion/contraction and the
bridge will deform. The effect of temperature and pier settlement (which is one
of the considered damage scenarios) are validated by comparison of the responses
generated under those conditions to the responses recorded in the FE software
package AxisVM. AxisVM provides a graphical user interface (GUI) which allows
for the simple visual verification of the built model, and the application of
thermal loading or pier settlement is as easy as clicking a few buttons.

# Validation of time series.
Once the FE model is validated additional steps are still necessary in order to
combine responses generated via FE simulation under different loading conditions
into a time series of responses under moving traffic. These time series are the
data that will be used for damage detection, thus validating their correctness
is paramount. To accomplish this a comparison will be made between a time series
of measurements from the experimental campaign, where a truck was driven across
bridge 705, and a time series of the simulated sensor data of the same truck
moving across bridge 705.

# Validate of analysis techniques.
# Bridge data corresponding to states normal and abnormal was not available,
# however data was avilable from viaducts corresponding to two states, high and
# low temperature. In this thesis the **analysis techniques are tested** on this
# data to provide, an albeit limited, test that the techniques can perform a
# classification between states on real data.

# And it is necessary to **test the developed analysis techniques on real data**
# to have confidence in the techniques, for when a DSS for bridge maintenance is
# installed in real life.

# After all, "in theory there is no difference between theory and practice, while
# in practice there is", \textcolor{red}{TODO:REF ambiquity of who said this}.

# Difficulty of determining "healthy" state.
SHM is a term used to describe a range of systems implemented for the purpose of
assisting and informing about the "fitness of purpose" of a structure. A major
part of any SHM system has to be geared towards long term evaluation of what is
the "normal" of "healthy" state of the system cite:aktan2001monitoring. This is
because environmental effects such as temperature can affect the response of the
structure enough to signal a departure from the structure's healthy state.

# Used with operator expertise.
Evaluation of a SHM system for bridges requires that the SHM system has been
installed prior to the occurence of damage. However for the economical decision
of installing a long-term SHM system to be taken, someone needs to be convinced
of the potential value of the system, somewhat of a catch 22. Thus research is
largely based on numerical simulations of bridges, in which case environmental
and operational effects are typically missing in the analysis, or damage is
applied to a bridge before it is decommissioned, in which case the bridge is not
under operational load. For these reasons any SHM system that is installed will
likely be used in combination with operator expertise to prioritise maintenance
or damage investigation, as the SHM system's long-term accuracy is evaluated and
the system improved. According to cite:brownjohn2006structural, while a SHM
system should be capable of a minimal amount of damage assessment the more
likely scenario is that an additional investigation is triggered by the system.

# Intelligence augmentation for decision making.
A decision support system for bridge maintenance is a software system that
provides the user of the system with information on the current state of a
bridge. The provided information should enable the operator of the system to
make a more informed decision about when and/or where maintenance should be
carried out. The provided information can include real-time sensor data and an
analysis thereof. Intelligence augmentation, where human experise is augmented
by artifical intelligence (AI) techniques is a natural step in the development
of fully automated AI-based systems. An example of this step in development is
the car company Tesla's "auto-pilot" for self-driving on highways which is only
a step in the direction to full self-driving but has shown enough value to be
produced and will allow for the collection of huge amounts of data for the
future improvement of the system. While AI can extend human's cognition with
computational processing capacity, humans can at this point still offer a more
holistic, intuitive approach in decision making cite:jarrahi2018artificial.

# OpenSees is my open source FE program of choice.
# This thesis could have gone one of two ways. The verified FEM of bridge 705 for
# Diana could have been used to simulate sensor responses for analysis. However
# Diana requires a relatively expensive proprietary licence for use (you must ask
# for a quote) and the file format of FEMs in Diana is rather awkward to modify.
# \textcolor{red}{support this claim}. By using OpenSees it was easier to target a
# greater number of bridges, by generating FEMs based on a high-level bridge
# specification. More importantly however OpenSees does not require a licence for
# use and is additionaly available for macOS users thus allowing for the research
# to be reproduced or extended.

# TODO: Talk about Diana in the FE Section.

# What is extensibility and what is the benefit for this thesis?
Extensibility is a measure of the ability to extend software without accessing
existing code to edit or copy it cite:krishnamurthi1998toward. The research in
this thesis is not just reproduceable but also extensible. This is achieved by
not depending on expensive proprietary software, by "lifting" parameters to the
boundaries of the system, and by publishing a system of composable functions
that present the problem domain at a high-level of abstraction. After reading
this thesis the large amount of work that went into data collection will become
clear. It is my sincere hope to facilitate further research in the area of
damage detection of concrete slab bridges and to prevent any duplication of
effort. Any interested party should be able to download this work and swiftly
move to the application of damage detection methods.

# Structure.
This thesis continues with an overview of the existing literature on damage
detection and structural health monitoring of civil infrastructure, with a focus
on bridges. Then additional motivational and theoretical background information
is presented. The methods section describes the generation of sensor data via an
extensible data collection system that combines data from many FE simulations,
describes the inputs and outputs of the data collection system, and outlines the
damage detection experiments on the generated data. In the results section the
generated data and results of experiments on that data will be discussed and
finally a conclusion of the work and results is presented.

# Thesis structure.
# The research question that this thesis answers is: how can sensors be utilized
# to build a DSS for bridge maintenance. The structure of this thesis and how the
# research question is answered is as follows. First a review of relevant
# literature and background material is presented. The DSS is then introduced at a
# high-level, showing how the separate components interact. The components of the
# DSS are examined in detail, with a large focus on the condition classification
# model that determines if sensor measurements represent an abnormal condition of
# the bridge. An analysis is presented of which sensor types and what sensor
# placement is optimal for detecting such an abnormal condition. A finite element
# model is used to simulate sensor measurements in order to address the lack of
# available data. Due to the safety requirements of any bridge, uncertainty
# measures for the damage estimates are calculated. Once the capabilities and
# limitations of the model are understood, an outline of a DSS is presented for
# policy makers which includes the model and a cost-benefit analysis is presented
# of the system. Finally (stretch-goal) an investigation is conducted into how
# such a system can be generalized to bridges other than bridge 705.

  # Data-driven model.
  # A DSS for bridge maintenance must provide information on the damage status of
  # the bridge to the user of the system or policy maker. Thus it is necessary to
  # transform the responses measured by the sensors into a report of the damage
  # condition of the bridge. To accomplish this a condition classification model
  # (CCM) is built which transforms sensor measurements into a condition report.
  # The CCM presened in this thesis is based primarily on two statistical methods
  # referred to from here on out as abnormal condition classification (ACC) and
  # similar structure similar behaviour (SSSB). A number of damage scenarios are
  # constructed and it is the goal of the CCM to identify the scenario based on
  # the senor measurements.

  # ACC.
  # The goal of ACC is to determine if the condition of the bridge has deviated
  # from undamaged conditions. The ACC operates under the assumption that when the
  # bridge is damaged that the distribution of sensor responses will deviate from
  # what is seen under undamaged conditions. To build an ACC system it is then a
  # requirement to determine what the distribution of sensor measurements are
  # during normal operation of the bridge. To achieve this the normal range of
  # loading conditions (traffic) are determined from data and applied to the FEM,
  # resulting in a set of simulated sensor measurements. A one-class classifier
  # and other statistical techniques can be applied to the simulated responses to
  # decide if responses fall within the expected normal range of responses or not.

  # SSSB.
  # The SSSB method is based on the assumption that similar structures should
  # behave in a similar manner when subjected to the same load. Bridge 705 in
  # Amsterdam has seven spans each with the same dimensions, ignoring the small
  # differences due to construction and time in operation. To develop an SSSB
  # system loads must be "driven" across the bridge in the FEM, then an analysis
  # must be performed on the difference between sensor measurements from sensors
  # at equivalent positions on each substructure.

#+LATEX: \clearpage
* Preliminaries

** Abbreviations

| ANN      | Artificial neural network                                     |
| CTE      | Coefficient of thermal expansion                              |
| DSS      | Decision support software                                     |
| FEM      | Finite element model                                          |
| NDE      | Non-disruptive evaluation                                     |
| NDW      | National Data Warehouse for Traffic Information (Netherlands) |
| NOAA     | National Oceanic and Atmospheric (USA)                        |
| OCSVM    | One-class Support Vector Machine                              |
| OpenSees | Open System for Earthquake Engineering Simulation             |
| RNN      | Recurrent Neural Network                                      |
| SHB      | Sydney Harbour Bridge                                         |
| SVM      | Support Vector Machine                                        |
| PyPI     | Python Package Index                                          |

** Definitions

| Crack zone          | An area of the bridge deck where cracks have occured |
| Normal condition    | The bridge in expected or healthy state              |
| =Bridge=            | Model of a concrete slab bridge's geometry           |
| Damage scenario     | Healthy or specific damage state of a bridge         |
| Simulation scenario | Combination of damage scenario and traffic scenario  |
| Traffic scenario    | Defines the traffic that flows over a bridge         |

#+LATEX: \newpage
** Pseudocode

# Imperative and declarative.
Pseudocode in this thesis is given in two formats. Some of the psuedocode will
be presented in an imperative-style, that resembles the syntax of the Python
programming language. For code that represents data types rather a series of
operations, the pseudocode will resemble the syntax of Haskell. For most people
the syntax of Python, or a similar imperative style language, will already be
familiar. The syntax for data types used in this thesis is presented below in
Listing [[lst:haskell]].

# Type signatures.
Sometimes the reader will be presented with a type signature that looks like
=foo :: A -> B -> C=. A type signature describes the input and output types of a
function, the previous type signature can be read as "a function =foo= that
takes an argument of type =A=, an argument of type =B=, and returns a value of
type =C=". Another example is =bar :: [Float] -> Int= which can be read as "a
function =bar= which takes a list of =Float= as input and returns a value of
type =Int=". A type signature for a value si given as the generalization of a
fucntion with 0 arguments, for example =truck_1 :: Vehicle= simply informs the
reader that the variable =truck_1= is of type =Person=.

#+NAME: lst:haskell
#+CAPTION[Pseudocode example for a data type]: Pseudocode example for a data type declaration as used in this thesis. This pseudocode declares a type that describes a vehicle in terms of two pieces of data, a list of axle distance and a list of loads per wheel. Note that =foo :: bar= indicates a field of name =foo= and type =bar=. The square brackets represent the list type and the curly brackets represent a tuple type.
#+BEGIN_SRC haskell
-- A vehicle as a list of axle distances and wheel loads.
data Vehicle {
    -- Distance betwen each pair of axles.
    axleDistances :: [Float],
    -- A tuple per axle, of wheel load intensity in kilo Newton.
    wheelLoads    :: [(Float, Float)]
  }
#+END_SRC

#+LATEX: \clearpage
* Literature Review

# Introduction.
The goal of this Section is to summarise the existing body of work related to
the subject area of this thesis. This Section thus outlines the existing work on
damage identification and SHM of civil infrastructure, with a particular focus
on bridges. While the amount of literature related to SHM is vast with numerous
books written on the topic, the literature related to SHM of bridges is a little
smaller, and the focus on concrete slab bridges is smaller again. In particular
there seems to be much more research on SHM of expensive bridges such as the
Sydney Harbour Bridge (SHB) rather than less expensive but numerous concrete
slab bridges. The literature is vast therefore a complete literature review is
not presented but the papers that are visited are believed to be representative.
A brief description is presented of each relevant paper along with a criticism
of the research. This literature review is structured in two primary components,
first research into damage detection of SHM is presented, followed by a review
of practical considerations such as environmental noise and lessons learned from
SHM installations.

** Damage Detection

# Natural frequencies and mode shapes: bulk of the research.
Much of the early research into damage identification of civil infrastructure
was based on identifying modal properties, detecting damage by classifying
changes in natural frequency or mode shape. Model-updating methods are based on
having a model available and attempt to minimize the error between the model and
real measurements by modifying model parameters with an optimization algorithm,
in order to determine the state of the structure. Research into damage detection
has over the years turned to the use of machine learning, in particular to
unsupervised learning methods that do not require a model.

# I-40: no change until final damage case, same change in undamaged data.
Damage was applied to the I-40 bridge, a 130m girder bridge over the Rio Grande
river, before it's demolition, and data recorded from ambient vibration tests.
The damage was intended to simulate fatigue cracking and was inflicted with
torch cuts in a girder. In the fourth and most severe damage state the web of
the girder contained a $\SI{1.8}{\meter}$ cut and the flange was completely cut
through. In cite:farrar1994dynamic it is noted that changes in dynamic
properties were only observed in the fourth damage state. Furthermore, changes
of similar magnitude were observed from repeated ambient vibration tests on the
undamaged structure.

# Curvature mode shapes.
In cite:pandey1991damage introduced the use of the curvature of mode shapes
which is obtained by differentiating the displacement mode shape twice. Changes
in the curvature of the mode shape are localized to the damage and furthermore
the absolute difference of the curvature mode shapes of the damaged and
undamaged structures increase with damage severity cite:dawari2013structural.
However the cite:pandey1991damage study was on a computer model of a beam, and
did not consider robustness to noise.

# I-40: could only localize damage when bridge would have collapsed.
In cite:doebling1998statistical changes in mode shapes, from the same I-40
experimental data as in cite:farrar1994dynamic, were shown to be statistically
different from the undamaged state for all damage states, however the analysis
could not discriminate whether the source of the change was structural damage.
The damage in the fourth damage state was localized, however at this point the
bridge was sagging by 2cm at the damage location, and according to
cite:yeung2005damage the bridge would have collapsed under a live load.

# Natural frequency and mode shapes: not robust to noise.
In cite:stubbs2000global changes in natural frequency and mode shapes from
numerical simulations are used to determine the location and the extent of
damage on a rigid frame and then to assess the safety of the structure. However
this paper highlights two issues common in the literature. Modal parameters
corresponding to a baseline or "healthy" state are required, and robustness to
noise is not addressed in the work. The requirement of "baseline" data is not a
fatal flaw and could be addressed in a number of ways: 1) the baseline state
comes from sensor measurements taken for newly built structures, 2) existing
structures could be monitored for /any/ changes after sensor installation, not
knowing whether the structure was already damaged or not, 3) a FEM is used to
generate an approximation of the baseline state. The robustness to noise is a
more crucial problem because civil structures will be subjected to environmental
factors such as temperature changes and ambient vibration. In the research
cite:stubbs2000global it simply states "the existence of noise in the data
processing should be addressed". TODO: Replace this reference.

# Dogna: modal curvature, not robust to noise.
The 64m concrete Dogna bridge in Italy was built in 1978 and suffered from a
strong flood in 2003. In 2008, prior to demolition, an experimental campaign was
carried out where six damage configurations were applied to the bridge in the
form of notches cut with a hydraulic saw. In cite:dilena2011dynamic changes in
modal curvature were succesfully used to identify the location of the damage.
However the dynamic tests were all carried out under similar environmental
conditions, thus the robustness to noise was not investigated.

# Problem of vibration.
In concrete structures with reinforcing steel bars, the bars are tensioned such
that the concrete remains in compression. Once the steel bars have corroded and
failed the concrete bridge is liable to collapse. However the stiffness of the
bridge is mostly contributed by the concrete, the corrosion of the steel has
little influence on the dynamics, until the reinforcing steel bars and bridge
have failed cite:friswell1997damage.

# Z24 bridge in Switzerland.
In cite:teughels2004structural a model-updating approach was applied which
minimizes the difference in mode shapes. This approach was validated on the Z24
highway bridge in Switzerland, which is a 58m pre-stressed concrete bridge. The
damage scenario considered was the lowering of one of the supporting piers
(originally at a height of 44m) by 95mm. In this study only a single damage
scenario was considered and environmental effects such as temperature which
could represent a false positive damage scenario were not considered.

# Model-updating methods.
Model-updating approaches compare measurement data with responses from an
analytical model and attempt to minimize the difference by updating model
parameters. One problem with optimization algorithms used to update model
parameters is that they may find a local rather than a global optimum.
Evolutionary algorithms are good candidates for such problems and in
cite:qin2018dynamic the particle swarm optimization algorithm is used as a
model-updating approach using vibration data. The approach was experimentally
verified against data from a 129m railway viaduct.

# Analytical model: hard to acquire inaccurate.
Health monitoring based on an analytical model imposes a challenge because an
analytical model is required and the necessary data for building an analytical
model is not always available. This is because civil infrastucture is not always
built precisely to the original design, due to changes in orders or due to
on-site construction constraints. Moreover, in the case of concrete, uniform
material properties are not guaranteed.

# Bayesian probabilistic approach.
A Bayesian probabilistic approach was applied in a laboratory test to a
reinforced-concrete bridge column cite:sohn2000bayesian, this method compared
the relative damage probabilites of different damage events based on data from
vibration tests. The method has the potential advantage of not requiring an
accurate analytical model, yet the study was only on a single column of a bridge
and it was a laboratory experiment that did not account for environmental noise.

*** Machine Learning

# Introduction to ML.
Machine learning can broadly be split into two variants, supervised and
unsupervised learning. Supervised learning methods map inputs to outputs based
on previously given input-output pairs known as labeled training data. Thus for
damage detection, supervised learning methods require the existence of data
corresponding to damage states, which is unlikely in the case of expensive civil
infrastructure such as bridges. Unsupervised learning methods attempt to find
previously unknown patterns in data set without pre-existing labels. One-class
classification is a form of outlier detection that can be considered a special
case of supervised-learning, where only one class of training data is present in
the training data.

# ML for SHM: prediction (level 4) not possible.
In cite:worden2006application a number of damage identification experiments were
applied that attempted to identify damage on an aircraft wing. The study showed
damage localization and assessment to be possible with machine learning methods
however the experiments were in a controlled laboratory setting without any
environmental factors present. In the same paper it is argued that "damage
prediction cannot be addressed by machine learning methods in general".

# TODO: Why in general?

# Clifton suspension bridge.
In cite:yeung2005damage a FEM of the 214m Clifton suspension bridge in Bristol,
England is used to generate data corresponding to healthy and damaged states,
namely damage to the girders. Environmental factors were considered by heating
one side of the model by $\SI{+30}{\celsius}$. In order to generalize the
classification problem, data was generated by simulating a vehicle moving at 3
different speeds. The vehicle was simulated using 2 concentrated loads, one per
axle. Features were extracted from simulated vibration data and given as input
to two unsupervised neural networks. The better-performing of the two was DIGNET
cite:thomopoulos1995dignet with a damage detection rate of 70%.

An ANN is used to detect damage from dynamic responses from a FEM of a railway
bridge in cite:neves2017structural. To accomplish this an ANN is trained on past
acceleration responses from the healthy bridge and then used to predict future
values, the difference between predicted and measured data are used as a damage
indicator. While prediction of subsequent acceleration data was possible, the
loading applied is a much simplified case in contrast to a highway bridge that
may have multiple lanes of traffic, in the research the loading applied was a
single heavy vehicle (a train). Furthermore the authors suggest further work
regarding the effect of environmental and operational effects.

The Sydney Harbour Bridge is a steel-reinforced concrete bridge built in 1932.
The SHB consists of 800 jack arches in longitudinal direction. In an
experimental campaign each jack arch was fitted with 3 accelerometers. It was
known that one of the arches was cracked. Two very interesting papers applied
damage detection to acceleration data collected from the sensors on the SHB.
Both of these papers, unlike any of the works discussed so far, make use of
structural information of the bridge.

cite:khoa2014robust uses the idea that if an arch on the SHB is healthy then
accelerometers would move together, if there is a crack then they would move
differently. An SVM was trained using labeled data from features combining data
from sets of 3 accelerometers on an arch. A one-class SVM (OCSVM) which is an
unsupervised variant of the SVM that is trained only on the healthy data, was
also tested. The supervised variant achieved an accuracy of approximately 0.97
and the unsupervised approximately 0.71. In cite:anaissi2017adaptive an
algorithm is suggested to improve selection of the Gaussian model parameter of
the OCSVM, which improved damage detection accuracy on the same SHB data set.

Two methods were applied in cite:diez2016clustering using the idea that similar
substructures should behave similarly. k-means clustering was applied to the
features collected from each arch. k-means clustering with k=2 and only
considering 6 arches, including one known damaged arch, a cluster was formed
containing primarily features from the damaged joint. This method did not
perform well when the amount of arches considered was increased to 71. The other
method applied in cite:diez2016clustering considered a "joint representative", a
feature that is the mean of the features from one arch. Then a pairwise map was
created using the Euclidean distance between each pair of joint representatives.
This method detected the known damaged arch, another arch with a known faulty
sensor and a third arch with unknown damaged state.

** Practical Considerations

# TODO: Temperature in concrete. For example, concrete absorbs considerable
# moisture during damp weather, which considerable increases the mass of the
# bridge. Temperature changes the stiffness properties of the road surface,
# known as the 'black-top', significantly. On a hot summer's day in the UK, the
# road surface will provide little stiffness, but on a cold winter's day the
# stiffness contribution is considerable. The difficulty is trying to predict
# the effects of temperature and moisture absorption from readily available
# measurements. There are further difficulties with highway bridges because they
# are highly damped with low natural frequencies

*** Noise

Any structural health monitoring system that is deployed on a real-life
structure must consider the environmental and operational effects that will
affect the responses of the bridge. Temperature changes the stiffness properties
of a bridge deck resulting in different responses throught a day or year, and
noise from traffic on another lane will also make damage identification more
difficult.

# Good reading: https://royalsocietypublishing.org/doi/full/10.1098/rsta.2006.1935#bib42

A regression analysis was applied to acceleration data from the Alamosa Canyon
Bridge in New Mexico in cite:sohn1998adaptive. The natural frequency varied
approximately 5% during the 24-hour interval when measurements were taken and
the frequency was well correlated with temperature. Measured temperatures
exceeded $\SI{45}{\celcius}$ and the eastern and western sides of the bridge
showed a large temperature gradient, because the bridge is oriented north to
south. In cite:peeters2000system a linear relationship is shown between the 1st
and 2nd eigenfrequencies of the Z24 bridge in Switzerland and temperature above
$\SI{0}{\celcius}$, and a separate linear relationship with temperature below
$\SI{0}{\celcius}$. The bilinear relationship was related to the presence of the
asphalt on the bridge. In cite:moser2011environmental a number of model are
proposed to show the relationship between natural frequency and temperature,
these included a bilinear model and 4th polynomial order models with and without
cross terms, all models performed well.

An integrated machine learning algorithm, combining techniques including PCA, is
presented in cite:ye2018integrated for separating the individual components of
the deflection signal into componenets with separate frequencies. When the noise
level was under 10%, each component (temperature, live load, structural damage)
was succesfully separated based on data from a computer model of a long-span
bridge. A linear relationship between temperature and deflection was assumed.
Temperature was decomposed into two sinusoidal components, daily and annual. An
auto-associative neural network is employed for separating the effect of damage
in extracted features from responses caused by environmental variations of the
system cite:sohn2002statistical. However the experiment was on a numerical
simulation of a hard drive, and a laboratory test on a spring-mass system. The
authors admit that several issues are to be addressed before the approach can be
used on real structures.

*** Faulty Sensor

In any deployed SHM system the possibility that a sensor has developed a fault
and that the received signal is incorrect must be considered, in the work on the
SHB cite:diez2016clustering one of the sensors was faulty, which was detected as
damage. Damaged sensors can be detected via sensor data reconstruction. In this
approach sensor data is reconstructed based on spatial and temporal correlations
among the sensor network. If there are discrepancies between the measurement
data and reconstructed data then the sensor may be faulty. Spatial correlations
are used to reconstruct sensor data via PCA cite:kerschen2004sensor, minimum
mean square error estimation cite:kullaa2010sensor, and support vector
regression cite:law2017data. A recurrent neural network (RNN) was used that
includes both spatial and past temporal data cite:moustapha2008wireless. More
recently in 2019 a bidirectional RNN includes more information by considering
spatial and both past and future temporal correlations citep:jeong2019sensor.
This method outperformed a number of existing methods on their test set, however
the test data was from numerical simulation of an unvalidated model.

# TODO: Future correlations?

*** Deployments

A few bridges that received an installation of a SHM system have already been
visited in this literature review. In the majority of these cases the bridge
being researched was scheduled to be demolished
cite:farrar1994dynamic,dilena2011dynamic,teughels2004structural, which enabled
different damages to be applied to the bridge in the period prior to demolition.
The SHB however had sensors installed on lane 7 in 2014 and they were still in
use in 2016 cite:diez2016clustering. In this Subsection we will visit some of
the operational SHM installations on bridges around the world.

A number of SHMS systems were deployed to monitor distinct behaviours on bridges
in Kentucky. From 2005 - 2011 a system was deployed to monitor impact damage
from over-height vehicles to the eastbound I-64 bridge and to identify the
vehicles cite:harik2011implementation. Vehicles were recorded by ultrasonic
height sensors and video cameras, accelerometers and strain gauges compared
impact to responses from sensors on a second bridge. One of the drawbacks that
led to the system being decommissioned was the cost of replacement of the data
acquisition system (once due to vandalism and once due to lightning strike) and
time the system was down. Two SHM systems were deployed in Kentucky on bridges
over the Ohio river, a barge impact detection system on the US 41 bridge and a
crack growth monitoring system on the I-275 bridge cite:peiris2018lessons. The
barge impact detection system (2006 - 2015) was pooly configured. Threshold
limits were set based on cite:yuan2008multi and did not detect an impact that
was less than 0.25 times the set threshold. Data transfer was also sporadic due
to a change in communication protocol by the cellular provider. The crack
detection system consisted of a vibrating wire micro crack meter transmitting
data to a server by cell modem every 10 minutes and data is viewable via a
website. This was a succesful low cost installation which began in 2012, and was
still operational in 2018, and through it additional costly repairs were deemed
unecessary.

A number of SHM systems have been installed on bridges in Sweden. According to
cite:enckell2007structural many communities are responsible for the maintenance
of their own bridges, but new constructions are dependent on political decisions
that delay projects, thus a SHM system is deployed to provide confidence in the
health of an old structure and the safety of users. The 9 x 78 m span New Årsta
Railway Bridge highlights a number of practical issues relating to the SHM
system installed during construction in 2003 cite:enckell2006structural. Data
collection was interrupted due to interruption in power delivery and internet
connectivity, water damage to the data logger due to freezing of a drainage
hole, and damage to sensors including "violent treatment after the installation
like hitting the sensors with heavy re-bars". In cite:enckell2011evaluation a
distributed fiber optic based SHM system was installed on the $\SI{950}{\meter}$
steel-beam concrete-deck Götaälv bridge between Gothenburg and Hisingen. In an
on-site crack test, the SHM system detected 4 of 7 cracks. The system is
designed to operate for 15 years however it's effectiveness in reality remains
to be seen.

** Summary

The trend in damage detection is to employ machine learning, with particular use
of unsupervised methods such as the OCSVM because they do not require having a
model available. Feature extraction is arguably the most important and difficult
step in ML-based health monitoring cite:worden2006application. Much of the
existing research suggests promising results but in a simulated or laboratory
setting, and does not consider the difficulties that environmental or
operational effects provide. Two works that succesfully detected apriori known
damage on the SHB combined machine learning techniques with knowledge about the
behaviour of the structure, in these works data from multiple sensors was
compared.

\textcolor{red}{TODO: more on: anomaly detection. SHM installations in Hong
Kong, and anomaly detection of non-bridge structures e.g. levees.}

* Motivation

The Literature Review provided information on /what/ has already been achieved
in the subject area of this thesis. This Section however provides background
information in order to further motivate this thesis -- the focus now moves to
the question of /why/. Why should sensors be installed on concrete slab bridges
for the purpose of damage detection? This Section will examine the different
types of bridges, types of damage that occur, how health monitoring takes place,
and why an extensible system for researching damage detection on bridges is
desirable.

** Existing Bridges
# Dutch road network overview.
The Dutch national main road network consists of 3,200km of road. Assets in the
road network are divided into four categories: pavements, structures, traffic
facilities and environmental assets. Each structure is categorized into a type
that has its own maintenance characteristics. Table [[tbl:dutch-road-network]]
outlines the categorization of the 3,283 structures in the network.

#+CAPTION[Structures in the Dutch national main road network]: Structures in the Dutch national main road network. Each type of structure has its own maintenance characteristics. The table lists for each structure type the total number in the Dutch national main road network and the total deck area.
#+NAME: tbl:dutch-road-network
| Stucture type        | Number | Deck Area (m2) |
|----------------------+--------+----------------|
|                      |    <r> |            <r> |
| Concrete bridge      |  3,131 |      3,319,002 |
| Steel bridge (fixed) |     88 |        301,997 |
| Movable bridge       |     43 |        347,876 |
| Tunnel               |     14 |        475,228 |
| Aqueduct             |      7 |         86,491 |
|----------------------+--------+----------------|
| Total                |  3,283 |      4,530,593 |

# TODO: https://www.wellsconcrete.com/blog/use-prestressed-concrete-vs-cast-place-concrete-precastprestressed-concrete/

Bridge 705 is a bridge in

#+CAPTION[Photo of the piers of bridge 705]: Photo of the piers of bridge 705. This photo shows piers at 5 of the 6 positions in longitudinal direction of the bridge. The two rows of piers furthest from the camera and the one row closest to the camera are hinged piers (notice the blue hinge closest to the camera) that allow the bridge deck to move in longitudinal direction. The remaining two rows of piers are fixed against longitudinal translation. The bridge is symmetrical, thus the single row of piers not shown (behind the camera) are also hinged.
#+NAME: fig:705-piers
[[./saved-images/photo-705-piers.JPG]]

# Types of bridges.
** Bridge Maintenance

In this subsection we will take a brief look at the cost of bridge maintenance,
with a focus on Dutch concrete slab bridges. Bridge maintenance is a requirement
in the life-cycle of a bridge in order to extend the life of a bridge and keep
it within operational conditions. The aims of bridge maintenance are effective
management of bridge stock and realistic and prioritized budgeting, taking into
account the entire bridge stock. cite:klatter2003life should be considered the
de-facto reference for this subsection.

# Cost of bridge maintenance.
Bridges are a type of structure that require a large investment, though they
also have a long service life of 50 to 100 years. Annual maintenance costs are
relatively small compared to the initial investment cost (<1%), however over the
lifetime of the bridge the maintenance costs are on the order of the initial
investment. The annual maintenance cost and the cost of replacement are given
for each type of structure in the Dutch national main road network in Table
[[tbl:dutch-bridge-costs]].

#+CAPTION[Maintenance and replacement cost of Dutch road structures]: Annual maintenance cost and cost of replacement in millions of euros, for each type of structure in the Dutch national main road network.
#+NAME: tbl:dutch-bridge-costs
| Stucture type        | Total Replacement | Annual Maintenance |
|                      |         Cost (€M) |     Cost (\euro M) |
|----------------------+-------------------+--------------------|
|                      |               <r> |                <r> |
| Concrete bridge      |             6,600 |                 37 |
| Steel bridge (fixed) |               600 |                  7 |
| Movable bridge       |             1,100 |                 10 |
| Tunnel               |             1,700 |                 13 |
| Aqueduct             |               250 |                  1 |
|----------------------+-------------------+--------------------|
| Total                |            10,250 |                 68 |

# Maintenance cost example.
The maintenance cost of a concrete bridge can be estimated by determining the
maintenance cost of frequently used components such as concrete elements,
extension joints and bearings. These costs estimates of the frequently used
components first require a description of minimal acceptable condition of the
components. Then, in combination with an estimation of maintanence intervals
(which can come from subjective and conflicting sources) and prioritization of
the available budgets, a maintenance plan of a bridge can be presented. An
example of such a plan for a typical concrete highway bridge is shown in Figure
[[fig:concrete-bridge-maintenance-cost]].

#+CAPTION: The maintenance cost of a typical concrete highway bridge. The y-axis shows the cost in thousands of euros. Each bar is for a period of five years and the cost is based on underlying components as indicated by the legend.
#+NAME: fig:concrete-bridge-maintenance-cost
[[./images/concrete-bridge-maintenance-cost.png]]

# Age of the current Dutch bridge stock.
The Dutch national road network contains over 3,000 highway bridges. Of these,
most are 30 or more years old. A significant amount of bridges were constructed
in the 1970s, which is typical for many Western European road networks. Fitting
a Weibull distribution to the lifetime of demolished concrete bridges suggests
an expected lifetime of 41 years. This in turn would mean that the many concrete
bridges constructed in the 1970s and earlier would be due for replacement.
However, of these demolished bridges, many were demolished due to a change in
functional or economical requirements, rather than due to technical failure.
Including the ages of current bridges in the fitted distribution increases the
expected lifetime to 75 years, which is more in line with the design for 80
years of most Dutch highway bridges, design codes in the Netherlands require a
design lifetime between 50 and 100 years.

# Cost of Dutch bridge maintenance vs replacement.
Figure [[fig:dutch-replacement-cost]] shows an initial peak in the expected cost of
replacement of Dutch bridges, this is largely due tot . In an aging bridge stock the cost
of maintenance can be assumed constant, averaged over the large number of
structures. After a long time the cost of replacement will be approximately 85€
million, approximately half the cost of annual maintanence of concrete bridges
at 37€ million.

#+CAPTION: The expected cost of replacement of concrete bridges in the Dutch national main road network. The expected cost is calculated by summing over all concrete bridges, their ages and replacement costs. The initial peak is largely due to a surge in construction around the 1970s. The cost of replacement will tend to 85€ million in the long run.
#+NAME: fig:dutch-replacement-cost
[[./images/dutch-replacement-cost.png]]
** Damage Types

Damage to a bridge can be classified as short-term or long-term. Short-term
damage events are defined as a change of the properties of structural materials
and elements, and of the behaviour of the whole structure, due to effects that
occur during a very short period of time such as a collision or fire. Long-term
damage events are those that occur gradually over a longer period of time. Table
[[tbl:damage-events]] cite:sousa2019tool outlines some of the predominant types of
damage due to short-term and long-term scenarios respectively.

# Detecting faulty sensors is an important scenario.
When damage is detected based on sensor measurements another possibility is of
course that the sensor is itself faulty. Sensors can become faulty for a number
of reasons, increased noise, bad installation, battery issues, harsh environment
etc. cite:ni2009sensor. Maintaining a healthy sensor network is important
because faulty sensors can cause not only permanent loss of data but also
inaccurate damage detection, if for example the detection system is being
trained on the faulty sensor data.

#+NAME: tbl:damage-events
#+CAPTION[Types of damage]: Types of damage due to short-term and long-term events. The first column gives the name of the damage type, and whether it is a short-term or long-term damage event. The second column gives examples of the type of damage and the third column indicates the part of the bridge that would be affected under such an event.
#+ATTR_LATEX: :float sidewaystable
|---------------------------------------+------------------------------------------------------+--------------|
| Short tem event                       | Examples                                             | Component    |
|---------------------------------------+------------------------------------------------------+--------------|
| Collision                             | Impact by overweight vehicle or boat in the river    | Pier         |
| Blast                                 | Impact by vehicle followed by explosion              | Pier         |
| Fire                                  | Impact by vehicle followed by explosion and fire     | All          |
| Prestress loss                        | Sudden failure of a prestress tendon                 | Deck girder  |
| Abnormal loading conditions           | Loading concentration and/or overloading             | Deck girder  |
| Excessive vibration                   | Earthquake                                           | Pier         |
| Impact                                | Impact pressure by water and debris during floods    | Substructure |
|---------------------------------------+------------------------------------------------------+--------------|
| Long term event                       | Examples                                             | Component    |
|---------------------------------------+------------------------------------------------------+--------------|
| Corrosion                             | Degradation of bearings                              | Deck         |
|                                       | Loss of cross-sectional area in prestressing tendons | Deck         |
| Time-dependent properties of          | Excessive creep & shrinkage deformations             | Deck         |
| the structural materials              | Concrete deterioration                               | All          |
| Fatique (low stress - high frequency) | High frequency and magnitude of traffic loads        | Deck         |
| Fatigue (high stress - low frequency) | Temperature induced cyclic loading                   | Abutment     |
| Environmental effects                 | Freezing water leading to concrete expansion         | All          |
| Water infiltration/Leaking            | Deterioration of the expansion joints; concrete      | Deck         |
|                                       | degradation in the zone of the tendon anchorages     | Deck         |
| Pier settlement                       | Change in soil properties                            | Deck         |

** Health Monitoring

# Damage localization and assessment (levels 2 and 3): have limitations.
The most basic form of damage identification is determining whether damage has
occured or not (detection). More sophisticated SHM methods attempt to determine
the location (localization) or extent (assessment) of the damage.

require either
severe damage or make assumptions about the type of damage cite:peter2003review.
While an SHM system should be capable of a minimal amount of condition
assessment (CA) the more likely scenario is an additional investigation for CA
is triggered by the system cite:brownjohn2006structural.

In this subsection we review some of the current methods of health monitoring of
bridges. citet:peter2003review should be considered the default reference for
this subsection.

# Global health monitoring.
Current state of the art health monitoring methods only indicate whether damage
has occured in a bridge, not determining the location or severity of the damage.
\textcolor{red}{verify by looking at more recent methods} This class of methods
are referred to as "global health monitoring" methods. Global health monitoring
methods are considered sufficient since knowing that damage has occured will
allow a more accurate inspection to take place.

# Local health monitoring.
Local health monitoring refers to methods that find the location and possibly
the extent of damage. Non-destructive evaluation (NDE) refers to methods of
determining the location of damage without damaging the structure, for example
with guided ultrasonic waves. NDE can be time consuming and expensive, and
access to a location on the bridge may be difficult or not even possible.

# Expense of local health monitoring.
In the USA the Federal Highway Administration (FHA) requires that the condition
of bridges be evaluated every two years.

Such an inspection typically takes the
form of a tap test. A tap test is a test where the surface of the bridge is
tapped in order to find variations in the sound response. However the tap test
is limited to finding damage near the surface and in cases, significant cracks.
And consider that in the USA there are over 500,000 highway bridges with a span
length of over 7m, inspection of all these bridges with a limited budget and
staff not always achievable.

# Changes in frequencies.
Most global health monitoring techniques are based on finding changes in
resonant frequencies or mode shapes. However for concrete structures the
deterioration of reinforced steel has little effect on natural frequency. Some
methods attempt to find the location and length of cracks based on natural
frequency, however these methods assume the only damage is cracking, an
assumption that will certainly not always be true in a real-life setting.

# Robust to environmental factors.
# Novelty detection methods do not require baseline data.
Bridges will be subjected to environmental factors that affect the responses
recorded by sensors. If the change in responses from environmental factors is
considered as noise, then the change from damage must be notably greater than
the change from noise in order for the health monitoring technique to detect
that damage has occured. Methods which compare responses to baseline responses
from the undamaged structure will suffer from this problem. Methods based on
novelty detection do not require baseline data but typically do not provide a
measure of the damage severity.

#  Difficult to obtain an accurate analytical model.
#  Concrete does not guarantee uniform material properties.

In the USA two bridge management systems (BMS) are used for the prioritization
of funds and for the recommendation of actions for each bridge, these are PONTIS
cite:thompson1998pontis and BRIDGIT cite:hawk1998bridgit. Both of these deployed
systems depend on the manual inspection of bridges for the acquisition of data.
In cite:yehia2008decision a decision support system is developed for concrete
bridge deck maintenance is proposed, however the system has self-proclaimed
flaws including a lack of bridge deck problems analyzed, and data from the
inspection of a bridge is required.

** Sensor Technology
** Extensibility
In order for the developed DSS to be truly extensible it is not limited to
depend on a single finite element program. The system has as a parameter a
method of communication with a finite element program, such that data can be
collected and analyzed from different finite element programs, in this case
OpenSees and Diana.

Due to the expensive nature of installing sensors in real life and of damaging a
bridge which is likely prohibited, the software system includes a component for
simulating sensor responses from reinforced concrete bridges. In order for this
simulation to be extensible and allow for further research on bridges other than
bridge 705, the specification of the bridge is simply a parameter of the system.

The developed decision support system has a number of **parameters** such that
users wishing to extend the software further are not limited to focus on bridge
705 or to use a specific finite element program. The specification of a bridge
is a parameter of the system, as is the type and intensity of traffic on the
bridge. Furthermore, as mentioned earlier, different finite element programs can
be integrated with this system, which may be useful if a finite element model of
a bridge for a different finite element program is already available to the
user.

# Extensibility requires open source.
For a software system to be extensible, the source code must be available to any
user wishing to extend said software. The benefits of **open source software**
are well known, in particular open source software allows /any individual with
an interest/ to develop or /extend/ the software. Open source software can thus
leverage the knowledge of the community and prevent duplication of efforts which
can occur when software is developed behind closed doors. Open source software
also provides transparency to anyone wishing to investigate the software and may
produce more reliable software due to more people having eyes on it.

\textcolor{red}{extending to other types of bridges}
** Existing Work
:PROPERTIES:
:UNNUMBERED: t
:END:
This section contains a review of the most relevant material studied during
this thesis work. The section begins with an overview of related works
followed by a more in-depth look at the most relevant material. The aim of
this section is to place the thesis in context and to provide background
information to the reader on employed techniques. The section concludes by
relating the reviewed material back to this thesis.
*** An overview
\textcolor{red}{TODO: overview of related works}
*** The application of machine learning to structural health monitoring
# Introduction.
cite:worden2006application illustrates the utility of a data-driven approach to
structural health monitoring (SHM) by a number of case studies attempting to
identify damage on an aircraft wing. In particular the paper focuses on pattern
recognition and machine learning (ML) algorithms that are applicable to damage
identification problems.

# Hierarchy of levels.
The question of /damage detection/ is to identify if a system has departed from
normal (i.e. undamaged) condition, simple "is there damage or not?". The more
sophisticated problem of /damage identification/ seeks to determine a greater
level of information on the damage status, even to predict the future of the
situation. The problem of damage identification can be considered as a hierarchy
of levels as described in cite:rytter1993vibrational.

 - Level 1. (Detection) indication that damage might be present in the
   structure.
 - Level 2. (Localization) information about the probable position of the
   damage.
 - Level 3. (Assessment) an estimate of the extend of the damage.
 - Level 4. (Prediction) information about the safety of the structure.
  
cite:worden2006application argues that ML can provide solutions to these
problems upto level 3, but that in general level 4 cannot be addressed by ML
methods.

# Waterfall model. (ML is only a step).
Applying ML for the purpose of SHM is usually only a single step in a broader
framework of analysis. Figure [[fig:waterfall-model]] shows the waterfall model
(cite:bedworth2000omnibus) which begins with sensing (when to record responses)
and ends with decision making. ML methods are only step four in this model. An
important part of this entire process is feature extraction, step three, which
can be regarded as a process of amplification, transforming the data to keep
only information that is useful for the ML analysis. Another aim of feature
extraction is to reduce the dimensionality of the data, to avoid the explosive
growth of the data requirements for training with the data dimensions, known as
the /curse of dimensionality/ TODO:REF.

#+CAPTION: The /waterfall/ model.
#+NAME: fig:waterfall-model
#+ATTR_LATEX: :width 150pt
[[../images/waterfall-model.png]]

# Experiment setup and features.
An experiment was setup to identify damage on the wing of a Gnat artefact.
Damage scenarios for testing were created by making a number of cuts into copies
of the wing panel. Transmissibility between two points was chosen as a
measurement based on success in a previous study TODO:REF, it is the ratio of
the acceleration spectra between two points $A_j(\omega)/A_i(\omega)$. This was
measured for two pairs of perpendicular points on each wing; in the frequency
range 1-2kHz, which was found to be sensitive to the type of damage
investigated. The measurements were transformed into features for novelty
detection by manual investigation of 128-average transmissibilities from the
faulted and unfaulted panels, selecting for each feature a range of spectral
lines as shown in TODO:FIG. 18 features were chosen.

# Damage detection.
To address the first level of Rytter's hierarchy, damage detection, an outlier
analysis was applied. This outlier analysis calculates a distance measure (the
squared Mahalanobis distance) for each testing observation from the training
set. 4 of the 18 features could detect some of the damaged scenarios and could
detect all of the unfaulted scenarios, other features produced false positives
and were discarded. Two combined features managed to detect all damage types and
raised no false positives.

# Damage location.
The second level of Rytter's hierarchy is damage localization. This problem can
be approached as a regression problem, however here it is based on the
classification work done for damage detection where transmissibilities are used
to determine damage classes for each panel. A vector of damage indices for each
of the panels is given as input to a multi-layer perceptron (MLP) which is
trained to select the damaged panel. The paper argues that "it may be sufficient
to classify which skin panel is damged rather than give a more precise damage
location. It is likely that, by lowering expectations, a more robust damage
locator will be the result". This approach has an accuracy of 86.5%, the main
errors were from two pairs of adjacent panels, whose damage detectors would fire
when either of the panels were removed. The approach depends on the fact that
damage is local to some degree, and the damage detectors don't fire in all
cases, which was true in this case.

# Damage assessment.
, the assessment was based on the previous detection technique.

*** Neural Clouds for monitoring of complex systems
   # One-class classification.
   In one-class classification, a classifier attempts to identify objects of a
   single class among all objects by learning from a training set that consists
   only of objects of that class. One-class classifiers are useful in the domain
   of system condition monitoring because often only data corresponding to the
   normal range of operating conditions is available. Data corresponding to the
   class of abnormal conditions, when a failure or breakdown of a system has
   occurred, is often not available or is difficult or expensive to obtain.

   # Neural Clouds algorithm.
   The Neural Clouds (NC) method presented in cite:lang2008neural is a one-class
   classifier which provides a confidence measure of the condition of a complex
   system. In the NC algorithm we are dealing with measurements from a real
   object where each measurement is considered as a point in n-dimensional
   space.

   # Normalization and clustering.
   First a normalization procedure is applied to the data to avoid clustering
   problems in the subsequent step. The data is then clustered and the centroids
   of the clusters extracted. The centroids are then encapsulated with "Gaussian
   bells", and these Gaussian bells are normalized to avoid outliers in the
   data.

   # Height = probability.
   The summation of the Gaussian bells results in a height =h= for each point
   =p= on the hyperplane of parameter values. The value of =h= at a point =p=
   can be interpreted as the probability of the parameter values at =p= falling
   within the normal conditions represented by the training data.

   # Comparison.
   In comparison to other one-class classifiers, the NC method has an advantage
   in condition monitoring in that it creates this unique plateau where height
   can be interpreted as probability of the system condition. Figure
   [[fig:neural-clouds]] shows this plateau in comparison with other one-class
   classifiers, Gaussian mixture and Parzen-window.

   #+CAPTION: Comparison of Neural Clouds with other approaches, namely Gaussian mixture and Parzen-window. At the left side 2D contour line plots are pictures and at the right normalized density 3D plots.
   #+NAME: fig:neural-clouds
   [[../images/neural-clouds.png]]

   # Limitations.
   It is important to note that when significant changes occur in the normal
   state of the system, perhaps due to environmental changes, then the NC
   classifier should be retrained in order to avoid a false alarm. However, if a
   NC classifier is continually being retrained with real-time data then it may
   not detect a gradual long-term change to the system.
*** Combining data-driven methods with finite element analysis for flood early warning systems
   # Introduction and why levee collapse.
   In cite:pyayt2015combining a system for real-time levee condition monitoring
   is presented based on a combination of data-driven methods and finite-element
   analysis. Levee monitoring allows for earlier warning signals incase of levee
   failure, compared to the current method of visual inspection. The problem
   with visual inspection is that when deformations are visiable at the surface
   it means that levee collapse is already in progress.

   # Data-driven vs. finite element.
   Data-driven methods are model-free and include machine learning and
   statistical techniques, whereas finite-element analysis is a model-based
   method. One advantage of data-driven methods are that they do not require
   information about physical parameters of the monitored system. As opposed to
   finite-element analysis which in the case of levee condition monitoring
   requires parameters such as slope geometry and soil properties. The
   model-based methods provide more information about the monitored object, but
   are more expensive to evaluate and thus difficult to use for real-time
   condition assessment.

   # Combination of methods.
   In this paper the data-driven and finite-element components of the system
   which were developed are referred to as the Artificial Intelligence (AI) and
   Computer Model (CM) respectively. The AI and CM can be combined in two ways.
   In the first case the CM is used for data generation. Data is generated by
   the CM corresponding to normal and abnormal conditions. The normal behaviour
   data is used to train the AI and both the normal and abnormal behaviour data
   can be used for testing the AI. In the second case shown in Figure
   [[fig:ai-and-cm]] the CM is used for validation of the alarms generated by the
   AI. If the AI detects abnormal behaviour then the CM is run to confirm the
   result. If the AI was correct a warning is raised, else the new data point is
   used to retrain the AI.

   #+CAPTION: AI and CM...
   #+NAME: fig:ai-and-cm
   [[../images/ai-and-cm.png]]

   # Finite element analysis.
   # The paper includes a section which demonstrates the applicability of FEM for
   # prediction tasks. Real sensor values (collected from an experiment where a
   # constructed levee was intentionaly collapsed) are compared to virtual sensor
   # values generated by the CM. Figure TODO:REF it can be clearly seen how the
   # real and virtual sensor values deviate prior to collapse.
*** Flood early warning system: design, implementation and computational modules.
   # Decision support system.
   In cite:krzhizhanovskaya2011flood a prototype of an flood early warning
   system (EWS) is presented as developed within the UrbanFlood FP7 project.
   This system monitors sensors installed in flood defenses, detects sensor
   signal abnormalities, calculates failure probability of the flood defense,
   and simulates failure scenarios. All of this information is made available
   online as part of a DSS to help the relevant figure of authority make an
   informed decision in case of emergency or routine assessment.

   # Relevant components of the EWS.
   Some requirements that must be taken into account in the design of an EWS
   include:
   - Sensor equipment design, installation and technical maintenance.
   - Sensor data transmission, filtering and analysis.
   - Computational models and simulation components.
   - Onteractive visualization technologies.
   - Remote access to the system.
   Thus it is clear that the development of an EWS or DSS consists of much more
   than the development of the software components, but must also take into
   account the installation of hardware and the transmission of information
   between components of the system. These many interacting components are
   shown in Figure [[fig:urbanflood-ews]] along with a description.

   #+CAPTION: The /Sensor Monitoring/ module receives data from the installed sensors which are then filtered by the /AI Anomaly Detector/. In case an abnormality is detected the /Reliability Analysis/ calculates the probability of failure. If the failure probability is high then the /Breach Simulator/ predicts the dynamics of the dike failure. A fast response is calculated beginning with the /AI Anomaly Detector/ and ending with the /Breaching Simulator/. The /Virtual Dike/ module is additionaly available for the purpose of simulation by expert users, but takes longer. The fast response and the response from the /Virtual Dike/ module are both fed to the /Flood Simulator/ which models the flooding dynamics, this information is sent to the decision support system to be made available to the decision maker.
   #+NAME: fig:urbanflood-ews
   #+ATTR_LATEX: :width 250pt
   [[../images/urbanflood-ews.png]]

*** A clustering approach for structural health monitoring on bridges
   # Introduction.
   In cite:diez2016clustering a clustering based approach is presented to group
   substructures or joints with similar behaviour and to detect abnormal or
   damaged ones. The presented approach is based on the simple idea that a
   sensor located at a damaged substructure or joint will record responses that
   are significantly different from sensors at undamaged points on the bridge.

   # Collected data.
   The approach was applied to data collected from 2,400 tri-axial
   accelerometers installed on 800 jack arches on the Sydney Harbour Bridge. An
   /event/ is defined as a time period in which a vehicle is driving across a
   joint. A pre-set threshold is set to trigger the recording of the responses
   by each sensor, each event is then represented by a vector of samples $X$.

   # Normalisation.
   Prior to performing any abnormality detection the data is preprocessed. First
   each event data is transformed into a feature $V_i = |A_i| - |A_r|$ where
   $A_i$ is the instantaneous acceleration at the $i$th sample and $A_r$ is the
   "rest vector" or average of the first 100 samples. The event data is then
   normalised as $X = \frac{V - \mu(V)}{\sigma(V)}$.

   # Outlier removal.
   After normalisation of the event data, k-nearest neighbours is applied for
   outlier removal. One might consider that outliers are useful in the detection
   of abnormal conditions, since they represent abnormal responses. However if
   outlying data per joint are removed, then a greater level of confidence can
   be had when an abnormal condition is detected knowing that the result is not
   based on any outliers. In this outlier removal step the sum of the energy in
   time domain is calculated for event data as $E(X) = \sum_i |x_i|^2$. Then for
   every iteration of k-nearest neighbours, the $k$ closest neighbours to the
   mean of the enery of the joint's signals $\mu_{joint}$ is calculated.

   # Tranform and clustering metric.
   The event data is then transformed from the time domain into a series of
   frequencies using the Fast Fourier Transform (FFT), such that the original
   vibration data is now represented as a sequence that determines the
   importance of each frequency component in the signal. After this
   transformation a distance metric is calculated for each pair of event
   signals, this metric is used for k-means clustering of the data for anomaly
   detection. The distance metric used is the Euclidean distance: $dist(X, Y)
   = ||X - Y|| = \sqrt{\sum (x_i - y_i)^2}$.

   # Event based clustering.
   Two clustering methods were applied, event-based and joint-based. In the
   event-based clustering experiment it was known beforehand that joint 4 was
   damaged. All event data was clustered using k-means clustering with $K = 2$
   which resulted in a big cluster containing 23,849 events and a smaller
   cluster of 4662 events mostly located in joint 4. The percentage of events
   per joint in the big cluster are shown in Figure [[fig:shb-joint4]] where joint 4
   is clearly an outlier.

   #+CAPTION: ...
   #+NAME: fig:shb-joint4
   [[../images/shb-joint4.png]]

   # Frequency profiles.
   A frequency profile of both the big and small cluster are shown in Figures
   [[fig:shb-cluster0-profile]] and [[fig:shb-cluster1-profile]]. In case there is no
   knowledge of abnormal behaviour then this method can be used to separate
   outliers and obtain a profile of normal behaviour. In this research on SHB
   there was prior knowledge of a damaged joint. A frequency profile of an
   arbitrary joint and the damaged joint before and after repair is shown in
   Figure [[fig:shb-damaged-profile]]. The difference of the damaged profile to the
   other two is clear, which indicates that there is sufficient information in
   frequency information from accelerometers to detect abnormal joints.

   #+CAPTION: ...
   #+NAME: fig:shb-cluster0-profile
   [[../images/shb-cluster0-profile.png]]

   #+CAPTION: ...
   #+NAME: fig:shb-cluster1-profile
   [[../images/shb-cluster1-profile.png]]

   #+CAPTION: ...
   #+NAME: fig:shb-damaged-profile
   [[../images/shb-damaged-profile.png]]

   # Joint-based clustering.
   In joint-based clustering a pairwise map of distances is calculated between
   each pair of joint representatives. A joint representative is calculated as
   the mean of the values of all event data for one joint, after the outlier
   removal phase. Two experiments were conducted. One experiment consisted only
   of 6 joints, including the damaged joint 4. The clustering method detected
   the damaged joint as can be seen in [[fig:shb-6-joint-map]]. The second
   experiment was run on data from 71 joints. The resulting map can be seen in
   [[fig:shb-71-joint-map]] which accurately detected the damaged joint 135. Damage
   was also detected in joint 131 but this result was not verified.

   #+NAME: fig:shb-6-joint-map
   #+CAPTION: TODO:CAPTION
   #+ATTR_LATEX: :width 200pt
   [[../images/shb-6-joint-map.png]]

   #+NAME: fig:shb-71-joint-map
   #+CAPTION: TODO:CAPTION
   #+ATTR_LATEX: :width 200pt
   [[../images/shb-71-joint-map.png]]

*** DSS
   \textcolor{red}{TODO: Overview of bridge DSS}
*** Summary
\textcolor{red}{TODO: conclude the literature review}
#+LATEX: \clearpage
* Theory
* Methods
** Simulation
<<sec:meth:sim>>

# Section overview.
This section describes the data collection system which was created to model a
bridge in software and to collect data from simulating the bridge's response
under a damage scenario and traffic scenario. Following a brief overview of how
the data collection system operates, this section describes in detail the model
of a bridge's geometry (=Bridge=), of a damage scenario and a traffic scenario,
the FE software used to simulate a bridge's response, how the data collection
system operates from input to output, a description of the collected data,
validation of the model, and finally an overview of the assumptions that were
made in modeling.

# Brief system overview.
First a quick summary of the data collection system. A simulation scenario is
defined as a combination of a damage scenario and traffic scenario. For a given
=Bridge=, a number of FEMs are generated of the bridge in undamaged state, and
simulations are run. In each simulation a unit load is placed at a different
point on the bridge deck. Each point is chosen to be on a "wheel track", which
is where a vehicle's wheels will be when the vehicle is later "driven" along the
bridge. Vehicles are sampled according to the given traffic scenario and driven
along the bridge on a traffic lane in discrete time steps. Using the principle
of superposition, responses collected from the previous simulations can be
summed together (one for each vehicle's wheel) to calculate a response at a
requested point. A number of additional simulations must be run for the bridge
in damaged state. This will all be explained more thoroughly in Subsection
[[Superposition]] but it is useful to present a brief overview in advance.

*** Bridge Model

# The bridge type.
A parametric model for describing no-prestress no-posttension concrete slab
bridges was created for the programming language Python. The parametric model
exists as the type =Bridge=.

# Parameters of a bridge.
A =Bridge= is parameterized by dimensionality, length, width, piers, lanes,
material properties and parameters that define the mesh density. A =Bridge= can
be declared as 2D or 3D, this defines if the resulting FEM will be 2D or 3D. The
length and width define the area of the bridge deck. Piers define the position,
size and angle of the piers which support the bridge deck. Lanes define where
vehicles are allowed to drive on the bridge and the direction of traffic.
Material properties determine the interaction between the bridge elements and
their behaviour under load. Mesh parameters define the density of the base mesh
and how the mesh is built.

#+NAME: lst:bridge
#+BEGIN_SRC haskell
data Bridge {
  length   :: Float,
  width    :: Float,
  lanes    :: [Lane],
  sections :: [Section],
  piers    :: [Pier]
  }
#+END_SRC

#+NAME: lst:bridge-705
#+BEGIN_SRC haskell
bridge705 = Bridge {
  length   :: 102,
  width    :: 33.2,
  lanes    :: [Lane(4, 12.4), Lane(20.8, 29.2)],
  sections :: [Section],
  piers    :: [12.75, 15.3, 15.3, 15.3, 15.3, 15.3, 12.75]
  }
#+END_SRC

# Boundary conditions.
The boundary conditions of the model, whether degrees of freedom are fixed or
not fixed at the supports, will significantly affect the results of simulation.
The boundary conditions of the FEM of bridge 705 should be set such that they
are reflective of reality. The nodes along each of the abutments and along the
bottom of each pier are the nodal supports. Each of these nodal supports are
fixed against vertical translation, which makes obvious sense as the abutments
and piers resist the force of gravity acting on the structure and vehicles, in
order to keep the bridge suspended. In addition, a number of piers are fixed
against longitudinal translation while some are not. Hinged piers, as can be
clearly seen in Figure [[fig:705-piers]], are not fixed against longitudinal
translation, while the remaining piers are fixed. All of the remaining degrees
of freedom are set as not fixed.
  
**** Discretization
- Material properties may vary according to a continuous function on a real
  bridge while material properties in the FEM change at given discretization
  points.
**** Bridge 705
Bridge 705 is a no-prestress no-posttension concrete slab bridge in the east of
Amsterdam, close to Lelylaan station. The bridge has two lanes of traffic,
traveling in opposite directions and two tram lines in the center. The bridge
has 24 supporting piers each of a height of 3.5 meters. Figure
[[fig:bridge-705-real]] shows a photo of bridge 705.

#+CAPTION: Bridge 705 at Cornelis Lelylaan, Amsterdam. The bridge has two traffic lanes, and two tram lanes in-between them. This photo is courtesy of TNO.
#+NAME: fig:bridge-705-real
[[../../bridge705/bridge-705.png]]

The same material properties that were used in the Diana model of bridge 705
were used in the generated FEM of bridge 705 for OpenSees. These material
properties originally came from blueprints that were used for the construction
of the bridge. The material properties are specified in terms of density in
kilogram per meter, thickness in meters and Young's modulus in mega Pascal.
Figure [[fig:bridge-705-thickness]] show the thickness of the deck of bridge 705. A
similar figure but for Young's modulus of the deck of bridge 705 is available in
the Appendix as Figure [[fig:bridge-705-youngs]]. Note that for both of these plots
the material properties are symmetric across the longitudinal center of the
bridge. The material properties of bridge 705's deck are also available in a
more digestable format in Table [[tbl:bridge-705-props]] in the Appendix.

#+CAPTION: Thickness of the deck of the generated FEM of bridge 705. The bridge has the least thickness along the traffic lanes (approximately the purple area), and is most thick (yellow) between the traffic lanes and the tram lane in the center of the bridge (green). The material properties are symmetric across the longitudinal center of the bridge.
#+NAME: fig:bridge-705-thickness
[[../../saved-generated-data-images/bridge-705-full-3d/healthy/geometry/deck-shells-unrefined-top-view/thickness-parula-outline-false-lanes-true.pdf]]

Density and Young's modulus are set to a constant value throughout all piers of
bridge 705. Thickness however varies linearly according the specification from
the Diana model, increasing from a thickness of 0.362 meters at the top of each
pier to 1.266 meters at the top. The photograph of bridge presented in Figure
[[fig:bridge-705-real]] shows the increasing thickness of the piers. When generating
a model of bridge 705 for simulation, the piers are discretized into a number of
shell elements based on the $max_shell_len$ parameter as described in Subsection
[[Meshing]], each shell is assigned a value linearly in the range $[1.266, 0.362]$.
Poisson's ratio, which is the negative ratio of lateral strain to longitudinal
strain is constant for the entirety of the bridge deck and for the piers, set to
the material constant of 0.2 for concrete.

TODO: Why is Density not going to have an effect.

The nodes of the generated FEM which have degree's of freedom fixed are: the
nodes which make up the abutments at the east and west ends of the bridge, and
the nodes along the bottom of each the piers. All of these nodes are fixed in
translation along the y (vertical) and the z (transverse) axes. In addition
piers 8 - 15 are fixed in translation along the x (longitudinal) axis. Figure

\textcolor{red}{TODO: Figure of fixed and numbered nodes.}

\textcolor{red}{TODO: Why is rotation fixed.}

\textcolor{red}{TODO: Talk about rollers and different types of fixed pier.}

*** Damage Model

# TODO: verify content when Leziria bridge document is published.

The goal of the damage identification model is to identify different damage
scenarios from simulations of the operation of a bridge. This Subsection
discusses how different damage scenarios, as dicussed in Subsection [[Damage
Types]], can be simulated.

/Pier settlement/ can be simulated by displacing a pier by a fixed amount. This
is achieved in a simulation by applying a /displacement load/ at the bottom of a
supporting pier. The simulation runs, increasing the value of the load until the
desired displacement is achieved.

/Abnormal loading conditions/ such as an extremely heavy vehicle can be
simulated relatively easily by applying heavy loads in the FE simulation. Care
must be taken regarding the axle configuration because extreme heavy loads
typically have a different axle configuration than less heavy vehicles.

/Cracked concrete/ can be simulated by reducing the value of Young's modulus for
the cracked concrete section. In practice, Young's modulus is often reduced to
$\frac{1}{3}$ of its original value cite:li2010predicting. Simulating a crack
zone in this manner makes sense because damage reduces the stiffness of a
structure cite:yeung2005damage. Cracks typically occur in groups rather than
individually. We will refer to an area where cracking has occured as a crack
zone.

/Corrosion/ of the steel reinforment bars can be simulated by increasing the
size of the reinforcement bars.

# TODO:WHY can corrosion be simulated in this manner.

A /malfunctioning sensor/ can be simulated by adding white noise to the
simulated sensor's responses or by adding a constant offset to the responses.

# TODO:LITERATURE. From discussions with Sousa TODO:REF, detecting malfunctioning
# sensors is useful to accomplish.

 # How to test/score the models.
*** Noise Model
# What is noise?
Noise in a signal is considered to be the response from unwanted or unknown
sources. In the case of bridges the following can be considered as noise:
fluctuations in response caused by vehicles on another lane, random fluctuations
caused by the sensor instrument itself, the effect of a change in temperature or
indeed any other environmental or operational effect.

# Robust to noise.
A model is considered robust if its outputs are consistently accurate when input
variables, whether foreseen or not, are changed. A damage detection model must
be robust to noise in order for it to be considered usable in a real-life
setting. In the damage detection experiments, laid out later in Subsection
[[sec:methods:di]], the ability to detect damage in the presence of noise is
considered.

# Two forms of noise.
Two forms of noise are modeled, sensor noise and thermal noise. Sensor noise is
modeled with a white noise process, for each sensor type a standard deviation of
sensor noise is set. Thermal noise is modeled by running simulations of unit
($\SI{+1}{\celcius}$) uniform and linear temperature load, and then combining
the responses from these simulations depending on the air temperature being
modeled. Thermal noise is considered sufficient to investigate the robustness of
the damage identification model to long-term variations in response.

# Linear thermal expansion.
OpenSees does not directly support the application of thermal load based on a
user-input change in temperature, therefore temperature load is calculated based
on the assumption of linear thermal expansion. Under this assumption the strains
(and stresses) due to a change in temperature ($\varepsilon_{thermal}$) are
linearly proportional to the change in temperature, $\varepsilon_thermal \propto
\alpha \delta{T}$, where $\alpha$ is the coefficient of thermal expansion, which
is a property of the material being considered e.g. concrete.

# Temperature decomposed: EuroCode.
According to European design code Eurocode 1 cite:gulvanessian2001en1991 the
temperature distribution in a concrete bridge deck can be modeled as a linear
function. Therefore the force due to a change in temperature, that is applied to
a structure, can be decomposed into a uniform and linear component. While this
assumption is made in modeling, the temperature gradient can vary throughout the
day, for example a uniform gradient can exist just before sunrise when air
temperature can remain close to constant for several hours
cite:reynolds1972thermal. Furthermore the asphalt on the bridge deck can have an
effect on the temperature because the darker surface can cause greater heat
absorption, and the asphalt can also have an insulating effect. In a test in
Southern England $\approx \SI{5}{\centimeter}$ of asphalt was required before
the insulation matched the greater heat absorption cite:hendry1960thermal.

# Temperature decomposed: example, time from when concrete was set.
The change in temperature that must be considered is the change from the time
when the concrete was set, during construction of the bridge. If the change in
temperature at the bottom of the bridge deck is $\SI{+2}{\celcius}$ and the
change at the top of the bridge deck is $\SI{+10}{\celcius}$, this can be
decomposed into a $\SI{+6}{\celcius}$ uniform temperature component and a
$\SI{+8}{\celcius}$ linear component, as depicted in Figure
\textcolor{red}{TODO fig:thermal-loading}.

# Temperature difference of concrete bridge deck.
According to Eurocode 1 cite:gulvanessian2001en1991 a difference of
$\SI{+8}{\celcius}$ between the shade air temperature and the uniform bridge
temperature component can be used for concrete deck bridges. The same document
specifies a maximum linear temperature difference component of
$\SI{+15}{\celcius}$ for concrete deck bridges.

# Should transverse DOF be set?
The degrees of freedom in transverse direction must also be set. According to
the expertise of a colleague at TNO who built the FEM of bridge 705 for the
Diana software package, the wide bridge deck would allow for minimal translation
in transverse direction due to the friction along this width, thus the nodes
along the abutment can be fixed against translation in transverse direction. In
order to determine if the nodal supports belonging to the piers should be fixed
against translation in transverse direction, a calculation can be made in order
to determine if the bridge would move in transverse direction under a thermal
load. This calculation takes the form of comparing the force in transverse
direction due to axial thermal loading $F_{z\_temp}$ to the force in transverse
direction necessary to move the structure at one of the piers.

# Calculation of should transverse DOF be set.
The force necessary to move the structure at one of the piers is the force due
the self weight of the structure multiplied by the coefficient of friction
between steel (the support at the bottom of the pier) and concrete (the body of
the pier) $F_{vert} \cdot \mu$. $F_{z\_temp}$ due to axial thermal loading of
$\SI{+15}{\celcius}$, and $F_{vert}$, were calculated from the FEM of bridge 705
for AxisVM as $\SI{3000}{\kN}$ and $\SI{3600}{\kN}$ respectively. With a
coefficient of friction of 0.58, $F_{vert} \cdot \mu \approx \SI{2088}{\kN}$ and
thus $F_{z\_temp} > F_{vert} \cdot \mu$. This means that after a change in
temperature of only a few degrees $\frac{2088}{3000} \cdot \SI{15}{celcius}
\approx \SI{4.6}{\celcius}$ the force due to temperature in transverse direction
will overcome the resistance of the piers.

# Result of: calculation of should transverse DOF be set.
This result complicates modeling, as the piers will not move in transverse
direction below a change of $\SI{4.6}{\celcius}$ from the temperature that the
concrete was set at. However beyond this temperature range the piers will move.
In order to simplify modeling, only the case where the piers will not move is
considered, thus the supporting nodes of the piers are fixed against movement
in transverse direction.

# Calculating the uniform temperature load.
The combination of a change in temperature and a known coefficient of thermal
expansion (CTE or $\alpha$) of a material can be used to calculate the axial
thermal load to be applied to a material as shown in Equation [[eqn:thermal]]. First
the strain due to thermal expansion $\varepsilon_thermal$ is calculated as the
product of $\alpha$ and $\delta{T}$, then in combination with Young's modulus
$E$ the equivalent stress $\sigma_thermal$ is obtained. The thermal load
$F_thermal$ to be applied to the cross section of an element in simulation is
then determined as the product of the cross sectional area $A$ and the stress.
Note that the force applied to each of the shell element's nodes is $F_thermal /
2$ as there are two nodes sharing each of the four cross sections of the
element, as shown in Figure. \textcolor{red}{force per thermal load}

#+NAME: eqn:thermal
\begin{equation}
\begin{split}
  \varepsilon_{thermal} &= \alpha \cdot \delta{T} \\
  \sigma_{thermal} &= E \cdot \varepsilon_{thermal} \\
  F_{thermal} &= \sigma_{thermal} \cdot A
\end{split}
\end{equation}

#+NAME: fig:temp
#+ATTR_LATEX: :placement [t]
#+CAPTION[Effect of temperature]: Effect of temperature at point A (see Table [[tbl:loading-positions]]) during the year of 2019, data taken from NOAA for Holly Springs, North Carolina and interpolated to the range $\SI{-5}{\celcius}$ to $\SI{35}{\celcius}$. Each plot has two vertical axes, one for temperature and one for vertical translation.
[[./saved-images/thermal/temperature.pdf]]

# Temperature effect.
Temperature data is taken from the National Climatic Data Center
cite:data2001national branch of the National Oceanic and Atmospheric
Administration (NOAA), which provides temperature data at a resolution of one data
point every 1 minute. Air temperature data was used from a weather station in
Holly Springs in North Carolina, USA. Because the range of temperatures in the
data is greater than what is expected in the Netherlands, the data was
interpolated form the original range to the smaller range of $\SI{-5}{\celcius}$
to $\SI{35}{\celcius}$. The resulting temperature and the vertical translation
at point A (defined in Table [[tbl:loading-positions]]) are given in Figure
[[fig:temp]]. The data provides a temperature value every 5 minutes, a linear
interpolation is used both in Figure [[fig:temp]] and when performing classification
in order to have more data points available.

# Noise estimate.
To estimate the amount of noise to apply to generated data, the responses from
three vertical translation sensors and three strain sensors are examined from
the experimental campaign are considered. A Savgol filter with window size of 31
and degree 3 is fit to the data, and then the unprocessed signal subtracted. The
standard deviation of the remainder for vertical translation is $\approx
\SI{0.001}{\millimeter}$, and $\approx 0.001$ for strain. Plots of these
calculations are presented in Figures [[fig:noise-displa]] - [[fig:noise-strain]] in
Appendix. Because the sensor noise is so low, there does not appear much need to
add sensor noise to the signals, but neither is there much of a reason not to,
therefore this low amount of white noise is added to the generated signals.

*** Traffic Model

\textcolor{red}{TODO: Distribution of passenger vehicles}

https://www.researchgate.net/publication/303809875_Emission_factors_for_alternative_drivelines_and_alternative_fuels

# Introduction to the two datasets used.
A model of the normal traffic on bridge 705 is based on two datasets. A dataset
was provided by TNO of vehicles recorded using Weight-in-motion (WIM) technology
on the A16 highway in The Netherlands. This dataset will be referred to as the
A16 dataset. Data was also used from the National Data Warehouse for Traffic
Information (NDW). NDW provides a database of real-time and historic traffic
data in The Netherlands. The dataset used from the NDW will be referred to as
the NDW dataset.

# A16 dataset structure.
The A16 dataset contains a number of columns, including time and date, lane the
vehicle was travelling on, the vehicle type, vehicle speed, distance between
axles and load per axle.

# A16 filtering.
In the A16 data all vehicles are above 3500kg in weight and 7m in length. The
A16 dataset was filtered so that neither the total weight nor the total length
would exceed a z-score of 3 for that column respectively. The filtered data is
shown in \textcolor{red}{TODO filtered data}.

# Speed and axle width are constant, most columns ignored.
In the A16 dataset only the distance between axles and the load per axle are
considered, all other columns are ignored. All vehicles in the implemented
traffic simulation travel at an equal speed of 40kmph thus the speed column is
ignored. All vehicles are set to have an axle width of 2.5m, this is the axle
width of Truck 1 from the experimental campaign. Setting the same axle width for
all vehicles allows for the same set of unit load simulations to be used to
calculate responses for any vehicle travelling across the bridge, because they
can then all travel along the same wheel tracks.

# Wheel tracks.
The wheel tracks that exist on a bridge are half an axle width (1.25m) either
side of the center of each lane. The lanes on bridge 705 are both 8.4m wide and
4.2m from the center of the bridge in the transverse direction. Thus the lanes
are separated from each other by 8.4m and the center of the lanes are at ~z =
+-8.4m~. The wheel tracks are located at ~z = += 7.15~ and ~z = += 9.65~. The
lanes and wheel tracks on bridge 705 are depicted in Figure
\textcolor{red}{TODO: lanes and wheel tracks figure}.

# Data collection system parameterized.
The data collection system is parameterized by the distribution of the vehicles
that drive over it. The system has as parameter a filepath =vehicle_data_path=,
a column name =vehicle_pdf_col=, and at =vehicle_pdf= a list that describes the
probability density function (PDF) of vehicles in terms of the data in that
column. The parameter =vehicle_data_path= must point to a =.csv= file which
contains descriptions of vehicles. This =.csv= file will be loaded as a Pandas
=DataFrame= and should contain data as described in Table [[tbl:vehicle_data]].

#+NAME: tbl:vehicle_data
#+CAPTION: Example of Pandas =DataFrame= containing descriptions of vehicles that will be sampled. "axle\_load" is the load per axle in kilo Newton, "load" is the sum of these values. "axle\_distance" is the distance in meters between each pair of subsequent axles, "distance" is the sum of these values.
| load   | axle\_load          | distance | axle\_distance |
|--------+---------------------+----------+----------------|
| 225.55 | [79.44, 101, 45.11] | .79      | [6.02, 1.32]   |
| ...    | ...                 | ...      | ...            |

For example, a Pandas =DataFrame= will be loaded from =vehicle_data_path=, then
vehicles will be sampled from this =DataFrame= based on the PDF. A vehicle that
is sampled from this =DataFrame= will have a speed of 40kmph, and an axle-width
of 2m, the inter-axle distances and the axle weights are taken from the
=DataFrame=.

**** Traffic
To train a classifier to distinguish between normal and abnormal traffic
conditions it is necessary to define normal traffic conditions and additional
traffic conditions.

Traffic is simulated by
*** FE Program
# Two finite element programs.
Two FE programs are used for the collection of sensor responses, OpenSees
(cite:mazzoni2006opensees) and DIANA (cite:diana2019diana). OpenSees is used
because it is open source software, such that anyone can download and use the
software without a licence. On the other hand is proprietary software, if you
want to do research with Diana a licence must be purchased. The reason Diana is
supported is because a verified 3D FEM of bridge 705 is available for Diana. In
this thesis the Diana FEM is used in limited capacity for the verification of
results obtained via OpenSees. The focus is instead on OpenSees because it is
software that anyone with a laptop can use for free to extend this research. In
addition it is useful to have two FE programs available, one (OpenSees) can be
used to run less accurate but faster 2D FE simulations, allowing for a more
rapid research cycle. The results can then be compared and verified against
results from more accurate but also more computationally expensive 3D FE
simulations (Diana). It is noted that the 2D model will ignore some aspects in
the transverse direction of the bridge deck. For example the 3D model of bridge
705 has two lanes, but the 2D model ignores the concept of lanes entirely.

# OpenSees.
OpenSees stands for the /Open Sysem for Earthquake Engineering Simulation/, it
is "an open source software framework for creating applications for the
nonlinear analysis of structural and soil systems using either a standard FEM or
an FE reliability analysis. It is object-oriented by design and—in addition to
achieving computationally efficiency—it’s designed to be flexible, extensible,
and portable" cite:mckenna2011opensees.

# DIANA.
DIANA (\textbf{DI}splacement \textbf{ANA}lyzer) is developed by DIANA FEA BV
which is a spin-off company from the Computational Mechanics department of TNO
Building and Conctruction Research Institute in Delft, The Netherlands. DIANA is
a FE software package that is dedicated to problems in civil engineering,
including structural and geotechnical, and engineering related to tunnelling,
earthquake, and oil and gas.

\textcolor{red}{TODO: Image of the 705 Diana model.}

*** Superposition

The goal of the data collection system is to translate a =Bridge=, along with a
=TrafficScenario= and =BridgeScenario=, into a time series of responses. This
subsection details how that translation takes place.

# A Bridge is transformed into a TCL file.
The data collection system transforms a =Bridge= into a FEM for OpenSees. The
resulting FEM is a 2D or 3D model depending on the dimensionality of the
=Bridge=. In each case the FEM takes the form of a =.tcl= file (written in the
TCL language). A =.tcl= file for Opensees consists of a sequence of commands for
declaring a structure's geometry, material properties, and other settings of a
FE simulation. For example, a =.tcl= file created from a =Bridge= will consist
of a number of =node= and =element= commands, where nodes are points in space
with degrees of freedom and elements are a mathematical relation of how degrees
of freedom relate between nodes. In the case of the FEMs built from a =Bridge=,
four nodes are connected by a /shell/ element. Shell elements are used when the
thickness is significantly smaller than the other dimensions. In the case of
bridge 705's deck the length is 102.75m, width is 33.2m, and thickness is
varying from 0.5m to 0.739m.

# Unit load simulations are run.
Under the =HealthyScenario= for a =Bridge=, a number of simulations are run the
first time that a response is requested to a point load or vehicle. For each
wheel track a number of simulations are run. The number of simulations per wheel
track is specified by the system parameter =il_num_loads=. In each of these
simulations a load of unit intensity =I= is placed at a point on the wheel track
and responses of the bridge are recorded. The responses are translation from
each node, and stress and strain from each element. Thus in summary, for each of
the =il_num_loads= simulations per wheel track, the responses from the bridge
are recorded. Each of these simulations we will call a unit load simulation, and
the responses to such a simulation, unit load responses.

# Principle of superposition to calculate responses.
Unit load simulations are simulations that must only be run once, and then the
principle of superposition can be used to determine the response to a vehicle
under the =HealthyScenario=, based on the unit load responses. Furthermore, the
response to traffic (multiple vehicles on the bridge) can be calculated simply
by summing the response to each vehicle on the bridge. The use of the principle
of superposition to calculate the response to a vehicle is introduced in Listing
[[lst:superposition]]. This calculation can however be phrased as a linear algebra
problem for which computers are typically optimized. The calculation of the
response at many points to many vehicles over a series of time steps using
matrix multiplication is shown in Listing [[lst:matmul]].

#+NAME: lst:superposition
#+CAPTION[Response to a vehicle from unit load simulations]: Using the principle of superposition to calculate the response to a vehicle from unit load simulations. When requesting the response at a point =p= to a vehicle on a bridge, the vehicle is first decomposed into loading positions =wp= and intensities =wi=, one position and one load intensity for each of the vehicle's wheels. Then for each wheel position =wp=, the unit load simulation is selected where =wp= is closest to the unit load applied in that simulation. From this unit load simulation, the response =ru= at the recorded point closest to point =p= is considered. Thus the response =ru= is the response to a load at one of the vehicle wheel's positions, except not to the wheel's load but instead to a load of unit intensity, thus =ru= must be multiplied by =wi / ul= where =ul= is the unit load intensity.
#+BEGIN_SRC python
response = 0
p = Point(x=35, y=0, z=25)
for wp, wi in vehicle:
    unit_load_simulation = sim_with_unit_load_closest_to(wp)
    ru = unit_load_simulation.response_at(point)
    response += ru * (wi / ul)
#+END_SRC

#+NAME: lst:matmul
#+CAPTION[Response to traffic using matrix multiplication]: Response to traffic using matrix multiplication
#+BEGIN_SRC python
$ traffic_t0 = [
    1, 2, 0, 0,
    1, 2, 0, 0,
    3, 3, 0, 0,
    3, 3, 0, 0]
$ traffic = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 3, 3]
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 3, 3, 0]
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0]
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0]
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
$ points = [
    [0, 0, 0, 0]
    [0, 0, 0, 0]
    [0, 0, 0, 0]
    [0, 0, 0, 0]
]
$ print(np.matmul(traffic, points))
#+END_SRC

# Limited accuracy of responses: mesh density & il_num_loads
=il_num_loads= number of unit load simulations are run per wheel track. And
there are a finite number of responses collected from each unit load simulation,
as determined by the mesh density. To explicitly state an important point: the
unit load responses, which are used to calculate a response at a point =P= to a
vehicle, are the responses at the recorded point closest to =P=, and the unit
load simulations from which these responses are taken are those for which the
unit load is closest to each of a vehicle's wheels position on the bridge. Thus
the parameter =il_num_loads=, and the parameters that define the mesh density,
determine the discretization step of the model and thus the accuracy of the
responses which are calculated.

# \textcolor{red, TODO: Convergence plot}

# Influence lines per wheel track.
=il_num_loads= number of unit load simulations are run per wheel track. Then for
any point on the bridge, the response at that point can be calculated to a load
on one of that wheel tracks. The function of the response at a point due to a
changing load is called an influence line, which is commonly used in structural
engineering to describe a response function. Figure [[fig:influence-lines]] contains
a number of influence lines. Each influence line shows the displacement of the
bridge deck at a different point on the wheel track at ~z = -9.4m~, as a unit
load is moved along the same wheel track.

#+CAPTION: Displacement of the bridge deck at different points on the wheel track at ~z = -9.4m~, in each influence line plot a unit load is moved along the same wheel track. The red vertical line depicts the position of the load.
#+NAME: fig:influence-lines
[[./images/subplots-y-z-94.png]]

Furthermore we can stack the influence lines for a number of points against each
other, flipping each influence line by $90 \degree$ so it is vertical. For
example, we can consider a number of equidistant points along a slice in the
longitudinal direction of a bridge, and for each of these points consider the
response to a load moving along the same slice. Figure [[fig:il-matrix]] shows such
a matrix for ~z = -9.4m~. Each column of the matrix is an influence line, each
row shows the response along the bridge deck for ~z = -9.4m~ for a different
loading position.

#+NAME: fig:il-matrix
#+CAPTION[Load and response combinations on a wheel track]: A number of vertical influence lines stacked together. Each influence line (column) shows displacement at a different point on the wheel track at ~z = -9.4m~. Each column of the matrix is an influence line. Each row shows the response along the bridge deck for ~z = -9.4m~ for a different loading position. This image shows how, closer to the center of the bridge, the bridge does not suffer as much displacement.
#+ATTR_LATEX: :placement [ht]
[[./images/il-matrix-y-z-94.png]]

Another of the damage scenarios is pier displacement. To calculate responses to
a load under this damage scenario, all of the unit load simulations need to be
run again for this damage scenario. The name of the pier displacement damage
scenario in the data collection sytem is =PierDisplacement=. =PierDisplacement=
specifies a displacement in meters of one of a bridge's piers.

When creating a FEM of a =Bridge= under pier displacement for OpenSees, each of
the bottom nodes of the piers under displacement are not fixed for y translation
(to allow for the displacement of the piers to occur). An important step when
creating a FEM under this damage scenario for OpenSees is to set the method of
integration with the =integrator= command. Under the undamaged scenario the
integrator used is =LoadControl=, which specifies that, among other things, the
predictive time step of the simulation is driven by the loads applied. In the
case of pier displacement the =DisplacementControl= integrator is used instead,
this is used to specify that in an analysis step, the displacement control
algorithm will seek the time step that will result in a specified increment for
a particular degree of freedom of a specified node. For example the command
=integrator DisplacementControl 1 2 0.1= specifies that the displacement control
algorithm will seek an increment of 0.1 at node 1 in the second degree of
freedom.

When running a pier displacement simulation the =DisplacementControl= command is
used to specify that the central bottom node of the pier should be displaced by
1m. A load is placed on this node, though the load intensity is ignored by the
=DisplacementControl= algorithm, the load intensity is instead increased until a
displacement of 1m is reached. Figure [[fig:pier-disp]] shows a contour plot of the
displacement of the deck of bridge 705 due to a single pier being displaced by
-1m.

#+CAPTION: A contour plot of the displacement of the deck of bridge 705 due a pier being displaced by 1m. The node onto which a load is applied, and the same node that is watched by the =DisplacementControl= algorithm until the specified displacement of 1m is reached, is indicated by a red circle. This node is the central bottom node of the pier indicated by vertical black bars on either side of the red circle. The maximum displacement on the bridge deck is slightly less than 1m, this is because the piers are not infinitely stiff but have some elasticity.
#+NAME: fig:pier-disp
[[./images/ytranslation-pier-5.png]]

Due to the linear elastic accumption made when modeling, only one pier
displacement simulation needs to be run per pier. One simulation is run for each
pier, until that pier has been displaced by unit amount, one meter in the case
of this data collection system. After these simulations have run, the response
at any point on the bridge can be calculated due to any combination of piers
being displaced by different amounts, as outlined in Listing [[lst:pier-disp]].

#+NAME: lst:pier-disp
#+CAPTION: Calculation of the response
#+BEGIN_SRC python
response = 0
p = Point(x=35, y=0, z=25)
for vehicle in traffic:
    for wp, wi in vehicle:
        unit_load_simulation = load_sim_closest_to(wp)
        ru = unit_load_simulation.response_at(point)
        response += ru * (wi / ul)
#+END_SRC
**** Meshing
The mesh of the generated FEM is controlled by a parameter $max\_shell_\len$ or
~MSL~. This parameter determines the maximum permitted length of a shell element
in the generated FEM. The meshing process is split into two parts. Construction
of the base mesh, followed by refinement.

# Points of interest in one direction of the bridge deck.
The base mesh is constructed by first considering a number of positions of
interest in one direction of the bridge deck. For example, in the transverse
direction of the bridge, positions of interest include where the material
properties change and where the tops of the piers begin and end. For each pair
of positions of interest $P_0, P_1$ that are next to each other, a number of
equidistant positions $PS_{0,1}$ are selected between $P_0$ and $P_1$, such that
the distance between any neighbourly pair of positions in $PS_{0,1}$ is as close
to ~MSL~ as possible but no greater. $PS_{0,1}$ are added to a set of positions
$PS_x$.

# Cartesian product.
We now have a number of positions $PS_x$ where nodes should be placed in the
transverse direction of the bridge deck. The same process is repeated in the
longitudinal direction to acquire $PS_z$ and then the cartesian product of
$PS_x$ and $PS_z$ is calculated. The result is a point for each node in the base
mesh of the bridge deck. A similar process is applied to the bridge piers.

# Refinement.
Refinement of the base mesh occurs around a specified loading position $L$ based
on a set of refinement radii $R$. Each set of four neighbouring nodes which form
a rectangle are considered as a shell element. For each radius $R_i$ in $R$, the
shells which contain a node $R_i$ meters or less from $L$ are refined. Refining
these shells takes the simple process of splitting each shell into four smaller
shells, thus introducing five additional nodes per shell that is refined. For a
point-load simulation... A refined mesh of bridge 705, with a parameter of ~MSL
= 0.5~ for the base mesh, $R = [2, 1, 0.5]$ and $L_x, L_z = (85, 16.6)$ is shown
in Figure [[fig:705-mesh]].
# TODO: Specify exact refinement positions.

#+NAME: fig:705-mesh
#+CAPTION[Refined mesh of bridge 705]:
[[../../saved-generated-data-images/bridge-705-full-3d/healthy/geometry/deck-shells-refined-top-view/mesh-outline-true-parula.pdf]]

*** Reusable System
# Emphasis on reproduceable research.
In recent years there is an increased emphasis on reproducable research within
the scientific community. Reproducable research can be more easily verified by
peers than research which must be reimplemented. If research is accomplished
through code, for example as simulations are, then the research can be verified
be downloading the software and running it.

# Lifted parameters
# TODO: Not extensible, but on the way to extensible.
If the parameters of the research are not buried deep in the code but instead
"lifted" to the boundaries of the system, then that research can be considered
not just reproduceable but extensible.

# Reuse through composition of modular components.
Furthermore if the software is presented as composable functions instead of
scripts, then this allows for the reuse of the research, whereby a researcher
can compose some of the functions in a manner which was not done in the original
research.

# DRY and reuse.
Reuse of software aligns with the /don't repeat yourself/ (DRY) principle of
software engineering. Violations of DRY are creatively referred to as WET, or
/write every time/. The downside of WET solutions are that each implementation
has its own bugs, whereas in DRY solutions the bug fixes and optimizations are
shared by all contributors and users. To aid reuse and avoid repitition,
software must be made easy to use, which is the very next tip after the DRY
principle in the book The Pragmatic Programmer cite:hunt1900pragmatic.

#+BEGIN_QUOTE
Make It Easy To Reuse

If it’s easy to reuse, people will. Create an environment that supports reuse.

-- The Pragmatic Programmer \textcolor{red}{page number}
#+END_QUOTE

Keeping with these principles, an effort has been made for the research in this
thesis to me not just reproduceable but extensible. A system for running traffic
simulations on concrete slab bridges and analyzing results is published on the
Python Package Index (PyPI) cite:rankingpypi under the name =traffic-sim= where
you will also find the documentation. Two examples showing the use of the system
are presented in Listing [[lst:ts-point-load]] and Listing [[lst:ts-wagen-1]], for
=traffic-sim= installation instructions see the documentation on PyPI.

#+NAME: lst:ts-point-load
#+CAPTION: Contour load of a point load in =traffic-sim=.
#+BEGIN_SRC python
# example.py
from traffic_sim import PointLoad
#+END_SRC

#+NAME: lst:ts-wagen-1
#+CAPTION: Animation of a truck in =traffic-sim=.
#+BEGIN_SRC python
# example.py
from traffic_sim import PointLoad
#+END_SRC

*** Collected Data
The outputs of the system are time series of responses from sensors distributed
across the bridge model, these time series of responses we call /events/. Events
are labelled by simulation scenario and simulation time.
*** Validation
The FEM generated for the purpose of data collection needs to be validated,
otherwise an analysis of the data would offer little value. In this Subsection
the data collection system is set to bridge 705 and the generated FEM for
OpenSees validated against the previously validated FEM of bridge 705 for Diana.
In addition, the generated FEM is validated directly against measurements from
the experimental campaign.

**** Comparison with Diana

Four point-load simulations were run using the generated FEM of bridge 705 for
OpenSees, and simulations with the same loading parameters were run on the model
of bridge 705 for Diana. The positions which were chosen for each point-load are
given in Table [[tbl:loading-positions]]. Contour plots of vertical translation from
these simulations are given in Figures [[fig:comp-diana-a-y]] - [[fig:comp-os-a-y]] for
point A, and a comparison of strains in longitudinal direction, collected at the
bottom of the deck, in Figures [[fig:comp-diana-a-s]] - [[fig:comp-os-a-s]]. It makes
sense to compare simulations with only a single point load applied because the
traffic responses used for classification are generated based on a superposition
of responses from simulations where a single point is applied. For each point
load the colours in the plot for OpenSees and Diana are set to be equal, with
out of range values set to a white colour.

In Appendix [[sec:app:diana]] the remaining Figures [[fig:comp-diana-b-y]] -
[[fig:comp-os-d-s]] for points B - D are given. A comparison of the maximum and
minimum strains and vertical translations from these simulations is also given
in the Appendix in Tables [[tbl:max-displacement]] and [[tbl:min-displacement]].

Of these four point load simulations the responses are in very good agreement
between OpenSees and Diana, the first Figure [[fig:comp-diana-a-y]] matches the
least well perhaps, though strains from the same simulation match very closely.
While the maximum and minimum strain respones can be a little different between
OpenSees and Diana, this is not shown on the contour plots (no white colour).
The reason for this is that the out of range values are concentrated in very
small areas.

#+NAME: fig:comp-diana-a-y
#+ATTR_LaTeX: :placement [!p] :height 0.5\textwidth
#+CAPTION[Vert. trans. from a point load at A with Diana]: Vertical translation from a simulation of the Diana model of bridge 705, with a 100 kN point-load placed at $x = 34.955$ meters and $z = 16.6$ meters. The responses in this Figure match closely to the responses in Figure [[fig:comp-os-a-y]] from simulation with OpenSees.
[[./saved-images/diana-comp/a-diana-y-translation.pdf]]

#+NAME: fig:comp-os-a-y
#+ATTR_LaTeX: :height 0.5\textwidth
#+CAPTION[Vert. tranfrom from a point load at A with OpenSees]: Vertical translation from a simulation of the generated FEM of bridge 705 for OpenSees, with a 100 kN point-load placed at $x = 34.955$ meters and $z = 16.6$ meters. The responses in this Figure match closely to the responses in Figure [[fig:comp-diana-a-y]] from simulation with Diana. \textcolor{red}{Colors don't match exactly.}
[[./saved-images/diana-comp/a-y-translation.pdf]]

#+NAME: fig:comp-diana-a-s
#+ATTR_LaTeX: :placement [!p] :height 0.5\textwidth
#+CAPTION[Strain in Diana from a point load at A with Diana]: Vertical translation from a simulation of the Diana model of bridge 705, with a 100 kN point-load placed at $x = 34.955$ meters and $z = 16.6$ meters. The responses in this Figure match closely to the responses in Figure [[fig:comp-os-a-s]] from simulation with OpenSees.
[[./saved-images/diana-comp/a-diana-strain.pdf]]

#+NAME: fig:comp-os-a-s
#+ATTR_LaTeX: :height 0.5\textwidth
#+CAPTION[Strain in OpenSees from a point load at A with OpenSees]: Vertical translation from a simulation of the generated FEM of bridge 705 for OpenSees, with a 100 kN point-load placed at $x = 34.955$ meters and $z = 16.6$ meters. The responses in this Figure match closely to the responses in Figure [[fig:comp-diana-a-s]] from simulation with Diana.
[[./saved-images/diana-comp/a-strain.pdf]]

#+NAME: tbl:loading-positions
#+CAPTION[Loading positions for comparison with Diana]: Loading positions chosen for the comparison of the FEM of bridge 705 generated for OpenSees and the previously validated Diana model. Each point is given in meters along the longitudinal (x) and transverse (z) directions of the bridge. Each loading position is assigned a unique label so it can be referred to, and a reason why that position was chosen. The exact position chosen is the position of a node in the Diana model which fulfils the reason in the "Reason" column.
|   X (m) |  Z (m) | Label | Reason                                             |
|---------+--------+-------+----------------------------------------------------|
|  34.955 | 29.226 | A     | On a wheel track, between piers                    |
|  51.251 |   16.6 | B     | At center of bridge, symmetry expected in response |
|  92.406 | 12.405 | C     | On a wheel track, close to pier                    |
| 101.765 |  3.974 | D     | On a wheel track, close to abutment                |

\textcolor{red}{TODO: Update values in table, see Diana plots}

**** Experimental Measurements

# Introduction to experimental campaign.
An experimental campaign was carried out by TNO where two trucks were driven on
bridge 705 in Amsterdam and sensor responses measured. Both static and dynamic
load tests were executed. Sensors were installed by TNO as-well as by other
companies. The sensors measured longitudinal strain, vertical translation and
acceleration. The measured responses from the campaign allow the FEMs of bridge
705 for OpenSees and for Diana to be validated by comparing the responses in
simulation with Diana against the measurements.

# Only truck 1 staic load tests is considered.
All responses for classification in this thesis are calculated from a
superposition of static load simulations, thus the static load tests are
required for validation of the generated FEM of bridge 705 for OpenSees. Only
measurements from the load tests of Truck 1 are considered. This is because the
measured responses, and the responses from Diana for Truck 1 were available from
TNO in a ready-to-consume format. The 13 loading positions of truck 1 are
considered sufficient. The positions of the truck and the sensors considered for
validation are available in Appendix [[sec:app:expt]], in Figure [[fig:truck-pos]] and
Table [[tbl:sensor-pos]].

# Truck 1 and the static load test.
The specification of Truck 1 which was used in the experimental campaign is
given in the plot on the left side of Figure [[fig:truck-1]]. This plot shows the
area of each of Truck 1's wheel prints ($\SI{0.31}{meter} \cdot
\SI{0.25}{meter}$), and the load intensity at each end of each of the four
axles. The wheel print is the area of the wheel which is in contact with the
ground. In simulation the force from each wheel is represented by a point load,
rather than a distributed load, as shown in the plot on the right of Figure
[[fig:truck-1]], this is an acceptable modeling decision according to TODO:REF.

#+NAME: fig:truck-1
#+CAPTION[Truck 1 specification]: Specification of truck 1 from the experimental campaign. The plot on the left shows the axles and wheel prints of Truck 1 from the experimental measurement campaign. Each square shows the dimensions of a wheel print and each black line is an axle. Each end of each axle is annotated with the load intensity of the wheels at that end of the axle. The plot on the right depicts the model of the truck in simulation, here the force at each axle's end is represented by a point load.
#+ATTR_LATEX: :placement [!t]
[[../../saved-generated-data-images/vehicle/wagen-1.pdf]]

# TODO: Is the 375mm also to the right.

# FEMs make perfect health assumption.
An important point to note is that the FEM of bridge 705 for Diana and the
generated FEM for OpenSees are based on a blueprint of the bridge and make the
assumption that bridge 705 is in a perfectly healthy condition. However since
bridge 705 was built in 1962, it is more likely that some imperfections now
exist in the structure. Both the generated FEM and the FEM for Diana are based
on the assumption of perfect health and thus the measured responses are not
expected to match exactly.

# Regression plots and time series plots.
For each of the 13 static load tests the measurements from the vertical
translation sensors and strain sensors listed in Table [[tbl:sensor-pos]] are
compared to the responses from the Diana model of bridge 705 and to the
generated FEM for OpenSees, furthermore the responses from the Diana model are
compared to the OpenSees model. This comparison is presented through regression
plots and time series plots.

# Regression plots.
Regression plots comparing measurements from the experimental campaign and
responses from OpenSees and Diana are presented in Figure [[fig:regress-displa]] for
vertical translation, and in Figure [[fig:regress-strain]] for longitudinal strain.
Somewhat surprisingly the responses from the OpenSees model are in better
agreement with the measurements from the experimental campaign, than the
responses from the Diana model. The vertical translation responses are in
slightly better agreemeent than strain for all combinations of models.
\textcolor{red}{Add comment}

# Sensor plots.
Time series plots comparing measurements from the experimental campaign and
responses from OpenSees and Diana were generated for each vertical translation
and strain sensor considered for validation (listed in Table [[tbl:sensor-pos]]). A
figure which is considered representative of the vertical translation sensors is
given in Figure [[fig:sensors-displa]], and a representative result for the strain
sensors is given in Figure [[fig:sensors-strain]]. The vertical translation plots
show excellent agreement with the measurements in all cases. Of the strain
sensors O1 - O12 most are in very good agreement, however for some of the plots
where low strain values are recorded there are differences, and in sensor O7
there is clearly a difference worth further investigation \textcolor{red}{TODO}.
Of the twenty strain sensors installed by TNO, T1 - T20, all of them are in very
good agreement between the measurements, OpenSees and Diana.

#+NAME: fig:regress-displa
#+CAPTION[Linear regression of vert. trans. responses]: Linear regression of vertical translation responses from the experimental campaign against responses from simulation with OpenSees and Diana. Each plot is for a combination of two data sources. Each blue point compares the vertical translation at one sensor from one loading position, between two data sources. The x-axis is the value from 1 data source, and the y-axis the value from the other data source. The second plot compares OpenSees with the experimental measurements and shows the values are in very good agreement. The OpenSees model has a better fit to these measurements than the Diana model. All sensor and truck positions considered are given in Table [[tbl:sensor-pos]] and Figure [[fig:truck-pos]] respectively.
#+ATTR_LATEX: :height 1\textwidth
[[../../saved-generated-data-images/bridge-705-full-3d/healthy/validation/regression/regression-displa.pdf]]

#+NAME: fig:regress-strain
#+CAPTION[Linear regression of strain responses]: Linear regression of longitudinal strain responses from the experimental campaign against responses from simulation with OpenSees and Diana. Each plot is for a combination of two data sources. Each blue point compares the strain at one sensor from one loading position, between two data sources. The x-axis is the value from 1 data source, and the y-axis the value from the other data source. The second plot compares OpenSees with the experimental measurements, the OpenSees model has a better fit to these measurements than the Diana model, however clearly the strain values do not match as closely as vertical translation in Figure [[fig:regress-displa]]. All sensor and truck positions considered are given in Table [[tbl:sensor-pos]] and Figure [[fig:truck-pos]] respectively.
#+ATTR_LATEX: :height 1\textwidth
[[../../saved-generated-data-images/bridge-705-full-3d/healthy/validation/regression/regression-strain.pdf]]

#+NAME: fig:sensors-displa
#+ATTR_LATEX: :height 1\textwidth
#+CAPTION[Time series of vert. trans. sensors U25-U27]: Responses of vertical translation at sensors U25-U27 to Truck 1 moving across bridge 705. The x-axis is the x position of the front axle of Truck 1 on bridge 705 and the y-axis is the vertical translation at each sensor due to the truck's loading. Each set of coloured scatter points are from a different labeled data source.
[[./saved-images/sensors/displa-8.pdf]]

#+NAME: fig:sensors-strain
#+ATTR_LATEX: :height 1\textwidth
#+CAPTION[Time series of strain sensors O1, O10 and O11]: Responses of longitudinal strain at sensors U25-U27 to Truck 1 moving across bridge 705. The x-axis is the x position of the front axle of Truck 1 on bridge 705 and the y-axis is the strain at each sensor due to the truck's loading. Each set of coloured scatter points are from a different labeled data source.
[[./saved-images/sensors/strain-O-0.pdf]]

**** Convergence

# Why is convergence necessary.
The interface provided by OpenSees to build a FEM is quite a low-level
interface. There is no GUI with OpenSees, instead the FEM and simulation
parameters are built-up by writing commands in the TCL programming language into
a ~.tcl~ file which is then read and executed by OpenSees. OpenSees cannot
perform a test of convergence of a FEM with respect to mesh density, let alone
even generate a mesh itself, therefore a test of model convergence in terms of
mesh density must be performed.

# How mesh density is controlled.
The density of the generated FEM's mesh is controlled by the parameter ~MSL~ as
discussed in Subsection [[Meshing]]. As the value of ~MSL~ is decreased, the area of
all shells in the generated FEM for OpenSees decreases, heading to a limit of 0.

# Computation on a grid: why it's necessary.
The positions of nodes will change as ~MSL~ is varied. Consider the transverse
direction of the bridge, 33.2 meters in width. If ~MSL~ is set to $33.2 / 2 =
16.6$ then the number of nodes in that direction will, ignoring additional nodes
from piers or mesh refinement, be set to 3. When ~MSL~ is decreased to a value
less than 16.6 the number of nodes will jump to 4. The nodes are equidistantly
placed and thus do not line up with the original 3 nodes. Vertical translation
from a simulation is recorded at the positions of nodes, and strain is recorded
at positions $\frac{1}{2} \cdot \sqrt{3}$ of a shell elements width and height
from the shell element's center, as discussed in Subsection [[Collected Data]]. Due
to the variation of the position of nodes as ~MSL~ is increased, the convergence
of responses is based on responses calculated on a $100 \cdot 30$ grid that does
not change. The response at each point on this grid is calculated as the
interpolation of the responses from nearby points collected from simulation.

# Computation on a grid: min, max, mean.
# thus the maximum and mean displacement and minimum and mean strain are
# calculated from responses on a pre-determined grid of positions. To calculate
# the response at one of these grid positions, the responses from the closest
# positions from the simulation are interpolated. The minimum displacement
# values and the maximum strain values are not calculated from a grid, as they
# are likely to come from the node that the load is applied on. Furthermore, due
# to the heavy refinement of the mesh around the load, the mesh should be dense
# enough if the response is not exactly at the load.

# Figures of convergence of vert. trans. and strain.
Figure [[fig:converge-displa]] shows the minimum, maximum and mean of the vertical
translation responses calculated on a grid, from a simulation where a point load
is placed at point A (defined in Table [[tbl:loading-positions]]) at $x = 34.955$
and $z = 29.226$ meters. In Figure [[fig:converge-strain]] a similar plot is shown
but for longitudinal strain instead of vertical translation.
\textcolor{red}{Update images (fine on grid) and comment on convergence} In order to determine
the distance from point load simulations at which strain can be expected to
converge, the strain is plotted at multiple distance from a point load
simulation in Figure [[fig:point-a-nesw]]. From visual inspection this figure shows
that strain has converged in each of the directions shown within $\approx
\SI{1.5}{\meter}$. \textcolor{red}{Fix word wrap around small Figures.}

#+NAME: fig:point-a-nesw
#+CAPTION[Strain convergence at distance from point load A]: Strain convergence at increasing distance from the point load at A. Each plotted line shows the strain response at a point, as model size is increased via the MSL parameter. In each of the 4 plots the lines are coloured to show the distance from point A, in one of the 4 cardinal directions.
#+ATTR_LATEX: :float wrap :width 0.45\textwidth
[[./saved-images/convergence-pl/convergencestrain-point-load-a.pdf]]

#+NAME: fig:converge-displa
#+ATTR_LATEX: :float wrap :width 0.4\textwidth
#+CAPTION[Convergence of vertical translation]: Minimum, maximum and mean vertical translation, from a simulation of bridge 705 with a point load at point A. The x-axis shows the number of nodes in the FEM. The y-axis is the vertical translation normalized to the mean of the final 5 values of that plotted response line. When the model size has reached 24'000 nodes... \textcolor{red}{Update/re-run image and fix caption}
[[./saved-images/convergence-pl/min-max-displacement.pdf]]

#+NAME: fig:converge-strain
#+ATTR_LATEX: :float wrap :width 0.4\textwidth
#+CAPTION[Convergence of strain]: Minimum, maximum and mean strain, from a simulation of bridge 705 with a point load at point A. The x-axis shows the number of nodes in the FEM. The y-axis is the strain normalized to the mean of the final 5 values of that plotted response line. The maximum response is the maximum response from any node. TODO, minimum and mean strain are all shown to converge at similar rates. When the model size has reached 24'000 nodes... \textcolor{red}{Use image on grid and fix caption}
[[./saved-images/convergence-pl/min-max-strain.pdf]]

# Convergence at NESW.
The maximum longitudinal strain per simulation does not appear to converge as
$MSL$ is decreased. In order to examine the lack of convergence, the convergence
of strain responses is investigated at points at increasing distance from point
A where a point load is applied in simulation. This Figure TODO shows that the
strains converge within $\SI{1}{\meter}$ TODO of the point load. The remaining
positions in Table [[tbl:loading-positions]] were also tested for convergence of the
strains and the results were \textcolor{red}{TODO}.

**** AxisVM

Pier settlement and temperature load are validated against a FEM built for the
program AxisVM. The AxisVM model was built using a graphical user interface
(GUI) rather than programmatically. Building a model in this manner allows for
verification of the AxisVM model by visual inspection of the dimensions and
material properties in the GUI.

# Simple AxisVM model.
The model built in AxisVM has the same dimensions as bridge 705 however the
material properties do not vary throughout the deck, and a single material
property is used by all piers. Keeping the AxisVM model simple provides more
confidence that the model was built as intended, without error. Furthermore, we
are only interested in comparing the response due to pier settlement and due to
thermal loading, in order to validate that the generated FEM is calculating the
response due to these variable loads correctly. Thus the exact dimensions and
material properties of the built model are not important, it is only important
that they are the same in both the generated FEM and in the AxisVM FEM. The
material properties of both FEMs are given in Table [[tbl:single-section]].

# ./cli.sh --two-materials info bridge

#+CAPTION[Material properties for AxisVM comparison]: Material properties for comparison of the generated FEM against a model built using the AxisVM GUI. The first column gives the name of each material property. The second and third columns give the values of material properties for the deck and the piers respectively.
#+NAME: tbl:single-section
| Material property | Deck value | Pier value |
|-------------------+------------+------------|
| Density           | 2.907 kg/m | 2.724 kg/m |
| Thickness         | 0.65 m     | 0.814 m    |
| Young's modulus   | 47277 MPa  | 38400 MPa  |
| Poisson's ratio   | 0.2        | 0.2        |

***** Pier Settlement

# What piers are compared.
Simulations were run, both with OpenSees and AxisVM, where a displacement load
was applied to the central node at the bottom of each pier of bridge 705, one
simulation is executed per pier. The pattern of responses is very similar for
each of the piers close to the northern and southern edges of the bridge, and
similar for each of the remaining piers between them. Thus one pier near the
southern edge of the bridge and one pier just north of that pier are chosen for
comparison, these are piers 4 and 5 which are clearly identifiable in Figures
[[fig:pd-4d-axis]] and [[fig:pd-5d-axis]].

# Contour plots of responses.
Simulations were run where piers 4 and 5 are displaced vertically with AxisVM
and OpenSees. Contour plots of the vertical translation and longitudinal stress
along the bottom of the bridge deck are shown in Figures [[fig:pd-4d-axis]] -
[[fig:pd-4s-os]] for $\SI{1}{\millimeter}$ settlement of pier 4 and in Appendix
[[sec:app:pier]] for pier 5. The reason that stress is compared with AxisVM instead
of strain is that the AxisVM software only provides a visualization of the
stress, therefore the strains collected from simulation with OpenSees are
converted to stresses via Young's modulus.

# TODO: Talk about range of colourbars, and cut off.

# TODO: Mention which is greater, Axis vs OpenSees.

#+NAME: fig:pd-4d-axis
#+ATTR_LaTeX: :placement [!p] :height 0.5\textwidth
#+CAPTION[Vert. trans. from settlement of pier 4 with AxisVM]: Vertical translation recorded with AxisVM when pier 4 of bridge 705 is displaced vertically by $\SI{1}{\millimeter}$. The maximum (dark blue) vertical translation is on the order of the displacement applied to the pier, and the bridge deck raises by a maximum of $\SI{0.141}{\meter}. \textcolor{red}{Fix units.}
[[./saved-images/piers/4-axis-displa.pdf]]

#+NAME: fig:pd-4d-os
#+ATTR_LaTeX: :height 0.5\textwidth
#+CAPTION[Vert. trans. from settlement of pier 4 with OpenSees]: Vertical translation recorded with OpenSees when pier 4 of bridge 705 is displaced vertically by $\SI{1}{\millimeter}$. The maximum (dark blue) vertical translation is on the order of the displacement applied to the pier, and the bridge deck raises by a maximum of $\SI{0.129}{\meter}$. \textcolor{red}{Fix units.}
[[./saved-images/piers/pier-4-y-translation.pdf]]

#+NAME: fig:pd-4s-axis
#+ATTR_LaTeX: :placement [!p] :height 0.5\textwidth
#+CAPTION[Stress from settlement of pier 4 with AxisVm]: Longitudinal stress recorded with AxisVM when pier 4 of bridge 705 is displaced vertically by $\SI{1}{\millimeter}$. The responses are in excellent agreement with OpenSees in Figure [[fig:pd-4s-os]]. The minimum stresses are beyond the range of those recorded with OpenSees as indicated by the white area inside the blue. \textcolor{red}{Fix title and missing legend}
[[./saved-images/piers/4-axis-stress.pdf]]

#+NAME: fig:pd-4s-os
#+ATTR_LaTeX: :height 0.5\textwidth
#+CAPTION[Stress from settlement of pier 4 with OpenSees]: Longitudinal stress recorded with OpenSees when pier 4 of bridge 705 is displaced vertically by $\SI{1}{\millimeter}$. The responses share the same colorbar as the simulation with AxisVM above and are in excellent agreement.
[[./saved-images/piers/pier-4-stress.pdf]]

# Agreement between AxisVM and OpenSees.
The contour plots of pier settlement show that the vertical translation
responses generated with OpenSees are in very close agreement with those
collected with AxisVM. However the range of stresses collected with AxisVM and
OpenSees are clearly different, note the maximum and minimum values in the
legends of Figures [[fig:pd-4s-axis]] and [[fig:pd-4s-os]]. The range of stresses are
different likely due to non-convergence where the solution tends to infinity
cite:timoshenko1959theory. In order to investigate this claim (similar to how it
was accomplished for point load A in Figure TODO) convergence of stresses is
investigated at points at increasing distance from the north-western point of
pier 4 in Figure [[fig:pier-4-nesw]], and in Figure [[fig:pier-5-nesw]] in Appendix
[[sec:app:pier]] for pier 5.

# ./cli.sh --shorten-paths false --save-to /Volumes/THESIS/pier-4-convergence
# validate pier-conv --pier 4 --max-nodes 100000 --without-radius 2 --nesw-loc 0
# --nesw-max-dist 5 --max-shell-len 2 --min-shell-len 0.35

#+NAME: fig:pier-4-nesw
#+CAPTION[Stress convergence at distance from pier 4]: Stress convergence at increasing distance from the north-western (NW) point of pier 4. Each plotted line shows the stress response at a point, as model size is increased via the MSL parameter. In each of the 4 plots the lines are coloured to show the distance from the north-western point of the pier, in one of the 4 cardinal directions.
#+ATTR_LATEX: :float wrap :width 0.38\textwidth :placement {r}{0.4\textwidth}
[[./saved-images/piers/nesw-pier-4.pdf]]

***** Temperature Load

# Introduction to what is being compared.
In order to validate the temperature load which was implemented, as discussed in
Subsection [[Noise Model]], simulations of unit uniform and unit linear temperature
load were run using the FEMs of bridge 705 for both OpenSees and AxisVM. Two
simulations were run with OpenSees and two with AxisVM, in each case one
simulation for unform temperature load and one for unit linear temperature load.

# Uniform temperature load.
Figures [[fig:thermal-uniform-y-axis]] and [[fig:thermal-uniform-s-os]] show vertical
translation and stress from simulations of unit uniform temperature load applied
to FEMs of bridge 705 with AxisVM and OpenSees respectively. These plots show
that vertical translation is in very good agreement between the two models while
the stresses are shifted to higher values in the simulation with OpenSees.

\textcolor{red}{Investigate stress in uniform temperature load (it's fine in linear)}

# Linear temperature load.
Figures [[fig:thermal-linear-y-os]] - [[fig:thermal-linear-s-os]] show vertical
translation and stress from simulations of unit linear temperature load applied
to FEMS of bridge 705 with AxisVM and OpenSees respectively. Theses figures show
that vertical translation is in very good agreement between the two models, and
that the stress recorded is in good agreement.

#+NAME: fig:thermal-uniform-y-axis
#+ATTR_LaTeX: :placement [!p] :height 0.5\textwidth
#+CAPTION[Vert. trans. from uniform temperature loading in AxisVM]: Vertical translation from $\SI{+1}{\celsius}$ uniform temperature loading of the deck of bridge 705 with AxisVM. The responses are in excellent agreement with OpenSees in Figure [[fig:thermal-uniform-y-os]] but the maximum and minimums are slightly beyond the range of the OpenSees results, as indicated by the white areas.
[[./saved-images/thermal/axis-ytrans-axial.pdf]]

#+NAME: fig:thermal-uniform-y-os
#+ATTR_LaTeX: :height 0.5\textwidth
#+CAPTION[Vert. trans. from uniform temperature loading in OpenSees]: Vertical translation from $\SI{+1}{\celsius}$ uniform temperature loading of the deck of bridge 705 with OpenSees. The responses are in excellent agreement with AxisVM in Figure [[fig:thermal-uniform-y-os]]. \textcolor{red}{Fix colorbar maximum (should't be white in center of both plots)}
[[./saved-images/thermal/thermal-deck-unit-axial_load-y-translation.pdf]]

#+NAME: fig:thermal-uniform-s-axis
#+ATTR_LaTeX: :placement [!p] :height 0.5\textwidth
#+CAPTION[Stress from uniform temperature loading in AxisVM]: Stress from $\SI{+1}{\celsius}$ uniform temperature loading of the deck of bridge 705 with AxisVM.
[[./saved-images/thermal/axis-stress-axial.pdf]]

#+NAME: fig:thermal-uniform-s-os
#+ATTR_LaTeX: :height 0.5\textwidth
#+CAPTION[Stress from uniform temperature loading in OpenSees]: Stress from $\SI{+1}{\celsius}$ uniform temperature loading of the deck of bridge 705 with OpenSees. \textcolor{red}{Of the model this is the last bit that really needs to be fixed, vertical translation from the same simulation matches well, and both vertical translation and stress match well for the linear component, so this is likely in post-processing, or try increase model size for the temperature simulations (only 1)}
[[./saved-images/thermal/thermal-deck-unit-axial_load-stress.pdf]]

***** Conclusion

The model went through a number of validation tests to show that the responses
are reflective of responses in reality. The regression plots and the time series
plots which used measurements from the experimental campaign, indicated that the
responses from the generated FEM for OpenSees are in very good agreement with
the measurements. The regression plots showed the generated model for OpenSees
match better even than the Diana model, however one of the time series plots
(for strain) shows a strange result. The comparison of point load simulations
with the previously validated Diana model show that the responses generated with
OpenSees are in close agreement with those generated with Diana. In Figure
[[fig:comp-os-a-y]], the first shown in this validation section, the responses match
least between Diana and OpenSees, the remaining Figures [[fig:comp-diana-b-y]] -
[[fig:comp-os-d-s]] in the Appendix match closer. Convergence of strain responses
was investigated due to a lack of convergence around point load simulations and
pier settlement, plenty of sensor positions remain. Sensors for which there is
high confidence in results were selected that can be used for analysis. Of the
simulations which were compared with AxisVM, pier settlement responses were in
very good agreement as are the linear temperature simulations and vertical
translation in the case of uniform temperature load, however stress in the
case of uniform temperature load \textcolor{red}{likely to be post-processing (3rd TODO for this:p).}

*** Parameter Selection

# max_shell_len.
Increasing mesh density increases the accuracy of responses but also increases
run time of the FE simulation. A value of $MSL = 0.49$ was chosen to run point
load simulations, at $MSL = 0.49$ the number of nodes in the generated FEM of
bridge 705 for OpenSees is $\approx 24,000$. Figures [[fig:converge-displa]] and
[[fig:converge-strain]] show convergence of vertical translation and strains
respectively and justify the selection of $MSL = 0.49$. At this value of $MSL$
the run time of a simulation is approximatley three minutes on a
\textcolor{red}{Workhorse specs} machine.

#+NAME: fig:param-uls
#+CAPTION[Convergence as a function of ULS]: Convergence of vertical translation as the value of ULS is increased. For each value of ULS the loads of Truck 1 are decomposed into loads that are placed in the "buckets" of the wheel tracks,then a simulation is run and the response recorded. The reference value to calculate error is not based on wheel tracks, instead Truck 1 is simulated directly with a point load per wheel. Even at low values of MSL the error is already a very low percentage.
#+ATTR_LATEX: :float wrap :width 0.45\textwidth
[[./saved-images/params/uls.pdf]]

# Non convergence of strains -> ignored sensors.
The generated strain responses are not converging close to the point loads that
are applied on the wheel tracks, and also not converging close to the piers in
the pier settlement simulations. Under elastic plate theory, the stresses (and
strains) under a point load are infinitely large, which is why we do not observe
convergence cite:timoshenko1959theory. Therefore strain sensors are not placed
around the piers or near the wheel tracks for the purpose of classification.
Figure [[fig:strain-sensors]] shows the positions on bridge 705 where simulated
strain responses are collected, the selection of these sensors is justified in
the following paragraphs.

# Sensors ignored around piers.
Figures [[fig:pier-4-nesw]] and [[fig:pier-5-nesw]] show how the collected strains
converge at increasing distance from each pier, thus a value of $\SI{2}{\meter}$
was chosen where strains are not collected around each pier for the purpose of
classification. Around each pier it will be more difficult to install sensors on
the bottom of the bridge deck due to the presence of the piers, thus this is at
least a somewhat realistic set of sensor positions that are being ignored.
\textcolor{red}{Reference}.

#+NAME: fig:strain-sensors
#+CAPTION[Positions of available strain sensors]: Available positions in simulation to place strain sensors on the deck of bridge 705 for the purpose of classification. The blue dots indicate positions where strain sensors are available while the red sensors indicate positions where data from strain sensors cannot be used due to a lack of convergence.
#+ATTR_LaTeX: :placement [!t]
[[../../saved-generated-data-images/bridge-705-full-3d/healthy/sensors/unavailable-sensors.pdf]]

*** Model Assumptions

# Assumptions are made.
A number of assumptions were made during the modeling process. The modeling
assumptions are listed here, at the end of this Section [[sec:meth:sim]] on
simulation methods, along with a justification accompanying each assumption.

# Vehicles drive at the same speed.
All vehicles drive at the same speed. The speed of vehicles is not expected to
change much as a vehicle crosses the $\SI{102.75}{\meter}$ bridge 705. Having a
constant speed for all vehicles simplifies the calculation of the movement of
traffic.

# Vehicles drive along the center of a lane with equal axle widths.
All vehicles drive along the center of a lane and all vehicles have the same
axle-width. The reason for these two modeling assumptions is that they reduce
the computational time required to generate data from passing vehicles. The
computation time is reduced because all vehicles travel along the same "wheel
tracks". $ULS$ number of unit load simulation are required per wheel track,
allowing movement in the transverse direction of the bridge would require
additional wheel tracks.

# Poisson process.
Vehicles arrive at a bridge according to a truncated poisson process, truncated
so no inter-vehicle distances are less than $\SI{2}{\meter}$ and with mean
inter-vehicle distance of $\SI{7}{\meter}$. The poisson process is used for
modeling events that are independent. In reality, the arrival times of vehicles
to a bridge will be correlated to some extent. Classifying damage scenarios
using methods that would be affected by the rate of traffic are avoided.

# Damage scenarios not from validated.
The models of pier settlement and cracked concrete produce a change in responses
in reality similar to that in simulation, data is not available for bridge 705
in damaged state for obvious reasons. The response to pier settlement as shown
in Figures [[fig:pd-4d-axis]] - [[fig:pd-4s-os]] makes some intuitive sense, vertical
translation on the order of the applied displacement, and stresses building up
where the piers join the deck. Cracked concrete will in reality will have more
complex behaviour than modeling a reduction in stiffness by reducing Young's
modulus. What is assumed is that the additional complex effects from cracking
concrete in reality will not be too different from the response in simulation
that classification will no longer work.

# Linear elastic assumption.
Simulations are run under linear elastic assumption. This is certainly the
largest asumption that is made in modeling of the problem domain. Running
simulations under this assumption allows the simulation to run very fast, as it
is ultimately a linear calculation. Introducing non-linear simulations will
increase computational time, but also provide more realistic behaviour of a
bridge.

# Assumption that the model is good enough.
All of the assumptions can be summarized with the following assumption: the
behaviour of a bridge captured in this thesis via simulation is sufficiently
close to the real behaviour of a real bridge that the damage detection explored
on the simulated data can also work on real data. Responses of the bridge were
validated against measurements from the experimental campaign, however at badly
damaged states, the bridge will not obey the linear elastic assumption. To
re-iterate, the linear elastic assumption is the largest assumption made and
should be made the focus of future work.

# This assumption is verified by (A) applying the analysis techniques explored on
# real data in addition to the simulated data and (B) verifying the collected
# responses against sensor measurements collected in real life.

# Note that the accuracy of the responses depends on the discretization density of
# the FEM. This is a trade-off of time versus accuracy which can be chosen by the
# user. Discretization of the FEM is covered in Section [[Discretization]]. The
# accuracy of the FEM is shown to converge for bridge 705 in \textcolor{red}{TODO:
# Convergence plot}.

\clearpage
** Damage Detection
<<sec:methods:di>>

*** Damage Scenarios

# Damage detection and cracked concrete.
Damage detection is based on the collected data as discussed thoroughly in
Section [[Simulation]] on simulation. Two types of damage are considered for
detection, pier settlement and crack zones. A crack zone is simulated by
reducing Young's modulus in an area of the bridge deck in order to simulate the
reduction in stiffness that will accompany a cracked area of concrete. In
cite:gilbert2013time it is stated that "When a primary crack develops, there is
a sudden change in the local stiffness at and immediately adjacent to each
crack".

# What value of Young's modulus.
According to cite:gilbert2013time an upper limit of the second moment of area of
cracked concrete is given as $0.61$ of the value of uncracked concrete, this
value is suggested in the same paper as a design guideline. Is is stated in
cite:li2010predicting that in practice in the design of reinforcements,
$\frac{1}{3}$ of the uncracked stiffness is used when taking into account
cracking and other effects, though again this is a design guideline which will
attempt to err on the side of safety, and overestimate the reduction in
stiffness. In Eurocode 8 cite:fardis2009seismic if a more accurate model of
cracking is not performed, then it is permitted to take the stiffness properties
as $0.5$ of the uncracked values.

# Crack size and area.
According to cite:elsafty2013investigation transverse cracking is one of the
biggest problems affecting concrete bridge decks, and most of the cracking
occurs around mid‐span between piers and not over the piers. For these reasons
the cracking that will be modeled for damage detection is a transverse crack
zone at mid-span of bridge 705's central span. The crack zone extends from the
edge bridge 705 to the center and is 0.5 m wide. The decision to use 0.5 m is
based on the visual inspection of photos of a number of cracked concrete bridge
decks. The crack zone occurs across the southern lane, the deck of bridge 705 in
the cracked concrete damage scenario is shown in Figure [[fig:crack-1]].

#+NAME: fig:crack-1
#+CAPTION[Cracked concrete damage scenario]: The cracked concrete damage scenarios. This plot shows the shell elements of the deck of the generated FEM of bridge 705 for OpenSees, coloured by the value of Young's modulus per shell. The purple area is the crack zone. In this area the value of Young's modulus is reduced to $\frac{1}{2}$ of its original value.
[[../../saved-generated-data-images/bridge-705-full-3d/crack-lane-0-center-20/geometry/deck-shells-unrefined-top-view/young's-modulus-parula-outline-true-lanes-true.pdf]]

# Non-linear crack behaviour.
It is noted that in reality the cracking of concrete will introduce non-linear
behaviour that is not modeled, instead in the damage detection experiments the
goal is to detect the reduction of stiffness. It has been suggested to the
author that the non-linear behaviour which is not modeled could cause the
responses in the crack zone to "fall back down" into the range of responses that
are recorded under normal condition. Figure [[fig:crack-moment]], which is from
cite:gilbert2013time, shows the non-linear behaviour that is expected due to
uniform bending of a reinforced concrete slab, according to this work the "fall
back down" is not expected.

#+NAME: fig:crack-moment
#+CAPTION[Curvature of concrete due to bending]: The moment-curvature responses of a reinforced concrete slab. At moments less than the cracking moment the curvature is almost linear. Once the cracking moment $M_{cr}$ is reached the response, as shown in the black line, is non-linear. This image is from cite:gilbert2013time.
[[./saved-images/crack/crack-moment.png]]

# Pier settlement damage.
The second type of damage that is considered is the settlement of a pier, which
can occur due to a change in soil properties, perhaps due to climatic conditions
such as the drying of the soil which is a problem for clay soils in particular
that can become very dense as moisture is removed. Pier settlement is modeled at
a number of different severities, in order to determine at what severity of
settlement the pier settlement can be detected.

* Results

** Simulation

** Damage Identification

#+LATEX: \clearpage
* Appendix
:PROPERTIES:
:APPENDIX: t
:END:

** Bridge 705

# #+CAPTION: Density of the deck of the generated FEM of bridge 705 in kilogram per meter. The bridge deck under the tram lane, in the center of the bridge (light green), is the most dense (2.9 kg/m). The deck under the traffic lanes (teal green) is slightly less dense at (2.845 kg/mg) and the purple areas in-between are the least dense at approximately 2.6 kg/m. The material properties are symmetric across the longitudinal center of the bridge.
# #+NAME: fig:bridge-705-density
# [[../../saved-generated-data-images/bridge-705-full-3d/healthy/geometry/deck-shells-unrefined-top-view/density-parula-outline-false-lanes-true.pdf]]

#+CAPTION: Young's modulus of the deck of the generated FEM of bridge 705 in mega Pascal. The bridge deck under the tram lane, in the center of the bridge (yellow), has the highest modulus of elasticity at 41291 MPa. The deck under the traffic lanes (blue) has a lower value of 41291 MPa and the purple areas in-between have the lowest value at 38400 MPa. The material properties are symmetric across the width of the bridge.
#+NAME: fig:bridge-705-youngs
[[../../saved-generated-data-images/bridge-705-full-3d/healthy/geometry/deck-shells-unrefined-top-view/young's-modulus-parula-outline-false-lanes-true.pdf]]

#+NAME: tbl:bridge-705-props
#+CAPTION[Material properties of bridge 705]: Material properties of the deck of the generated FEM of bridge 705. The first column determines the position where a material property begins, in meters from the southern edge of the bridge. The second column gives the material density in kilogram per meter, the second column gives the thickness in meters, and the third column gives Young's modulus in mega Pascal.
| position |   density | thickness | youngs |
|----------+-----------+-----------+--------|
|        0 | 2.724E-06 |       750 |  38400 |
|      600 | 2.724E-06 |       740 |  38400 |
|      601 | 2.637E-06 |       655 |  38400 |
|     3650 | 2.664E-06 |       589 |  38400 |
|     3651 | 3.143E-06 |       500 |  38400 |
|     3850 | 3.124E-06 |       500 |  38400 |
|     3851 | 2.845E-06 |       500 |  41291 |
|    11100 | 2.765E-06 |       650 |  41291 |
|    11101 | 2.980E-06 |       650 |  38400 |
|    11300 | 2.995E-06 |       650 |  38400 |
|    11301 | 2.631E-06 |       739 |  38400 |
|    13710 | 2.617E-06 |       787 |  38400 |
|    13711 | 2.907E-06 |       650 |  47277 |
|    19489 | 2.617E-06 |       787 |  38400 |
|    19490 | 2.631E-06 |       739 |  38400 |
|    21899 | 2.995E-06 |       650 |  38400 |
|    21900 | 2.980E-06 |       650 |  38400 |
|    22099 | 2.765E-06 |       650 |  41291 |
|    22100 | 2.845E-06 |       500 |  41291 |
|    29349 | 3.124E-06 |       500 |  38400 |
|    29350 | 3.143E-06 |       500 |  38400 |
|    29549 | 2.664E-06 |       589 |  38400 |
|    29550 | 2.637E-06 |       655 |  38400 |
|    32599 | 2.724E-06 |       740 |  38400 |
|    32600 | 2.724E-06 |       750 |  38400 |

#+LATEX: \clearpage
** Diana FEM
<<sec:app:diana>>

# The mean difference of the maximum displacements between simulations is
# $0.0784 mm$ and the mean difference of the minimum displacements is $0.2165
# mm$.

# TODO: Update values and tables.

#+NAME: tbl:diana-nodes
#+CAPTION[Nodes chosen for loading in Diana]: Identifiers of nodes in the Diana bridge 705 model. Each node corresponds to a loading position in Table [[tbl:loading-positions]]. Providing this information allows for the contour plots from the Diana model to be reproduced, by anyone with a licence for the Diana software. The Diana model can either be requested from the thesis author, or can be found in the =traffic-sim= GitHub repository.
| Label | Node identifier |        X |        Z |
|-------+-----------------+----------+----------|
| A     | 126'679         | 34.95459 | 26.24579 |
| B     | 87'125          | 51.25051 |     16.6 |
| C     | 53'166          | 89.98269 | 9.445789 |
| D     | 54'603          | 102.5037 | 6.954211 |

#+NAME: tbl:max-displacement
#+CAPTION[Comparison of maximum displacement with Diana]: Comparison of maximum displacement between simulations of bridge 705 with the validated Diana model and a high-density OpenSees model. The first column determined the position of a 100kN point load applied in simulation, the position is defined in Table [[tbl:loading-positions]]. The second and third columns show the maximum displacement in millimeters for the Diana and OpenSees models respectively, due to the 100kN load placed at the labeled point.
| Point | Diana (mm) | OpenSees (mm) | Diff. (mm) | Diff. / Diana |
|-------+------------+---------------+------------+---------------|
| A     |     0.1015 |        0.1082 |     0.0067 |        0.0660 |
| B     |     0.0030 |        0.0032 |     0.0002 |        0.0667 |
| C     |     0.0116 |        0.0121 |     0.0005 |        0.0431 |
| D     |     0.0058 |        0.0066 |     0.0008 |        0.1379 |
|-------+------------+---------------+------------+---------------|
|       |            |          Mean |     0.0021 |        0.0784 |
#+TBLFM: $4=abs($2-$3);%0.4f::$5=abs($4/$2);%0.4f::@6$4=vmean(@2$4..@5$4);%0.4f::@6$5=vmean(@2$5..@5$5);%0.4f

#+NAME: tbl:min-displacement
#+CAPTION[Comparison of minimum displacement with Diana]: Comparison of minimum displacement between simulations of bridge 705 with the validated Diana model and a high-density OpenSees model. The first column determines the position of a 100kN point load applied in simulation, the position is defined in Table [[tbl:loading-positions]]. The second and third columns show the minimum displacement in millimeters for the Diana and OpenSees models respectively, due to the 100kN load placed at the labeled point.
| Point | Diana (mm) | OpenSees (mm) | Diff. (mm) | Diff. / Diana |
|-------+------------+---------------+------------+---------------|
| A     |    -0.2810 |       -0.3221 |     0.0411 |        0.1463 |
| B     |    -0.1375 |       -0.1431 |     0.0056 |        0.0407 |
| C     |    -0.0464 |       -0.0673 |     0.0209 |        0.4504 |
| D     |    -0.0210 |       -0.0258 |     0.0048 |        0.2286 |
|-------+------------+---------------+------------+---------------|
|       |            |          Mean |     0.0181 |        0.2165 |
#+TBLFM: $4=abs($2-$3);%0.4f::$5=abs($4/$2);%0.4f::@6$4=vmean(@2$4..@5$4);%0.4f::@6$5=vmean(@2$5..@5$5);%0.4f

#+NAME: fig:comp-diana-b-y
#+CAPTION[Displacement in Diana from a point load (B)]: Displacement from a simulation of the Diana model of bridge 705, with a 100 kN point-load placed at $x = 51.251$ meters and $z = 16.6$ meters. The responses in this Figure match closely to the responses in Figure [[fig:comp-os-b-y]] from simulation with OpenSees.
#+ATTR_LaTeX: :placement [!p]
[[./saved-images/diana-comp/b-diana-y-translation.pdf]]

#+NAME: fig:comp-os-b-y
#+CAPTION[Displacement in OpenSees from a point load (B)]: Displacement from a simulation of the generated FEM of bridge 705 for OpenSees, with a 100 kN point-load placed at $x = 52.521$ meters and $z = 16.6$ meters. The responses in this Figure match closely to the responses in Figure [[fig:comp-diana-b-y]] from simulation with Diana.
[[./saved-images/diana-comp/b-y-translation.pdf]]

#+NAME: fig:comp-diana-b-s
#+CAPTION[Strain in Diana from a point load (B)]: Strain from a simulation of the Diana model of bridge 705, with a 100 kN point-load placed at $x = 51.251$ meters and $z = 16.6$ meters. The responses in this Figure match closely to the responses in Figure [[fig:comp-os-b-s]] from simulation with OpenSees.
[[./saved-images/diana-comp/b-diana-strain.pdf]]

#+NAME: fig:comp-os-b-s
#+CAPTION[Strain in OpenSees from a point load (B)]: Strain from a simulation of the generated FEM of bridge 705 for OpenSees, with a 100 kN point-load placed at $x = 52.521$ meters and $z = 16.6$ meters. The responses in this Figure match closely to the responses in Figure [[fig:comp-diana-b-s]] from simulation with Diana.
[[./saved-images/diana-comp/b-strain.pdf]]

#+NAME: fig:comp-diana-c-y
#+CAPTION[Displacement in Diana from a point load (C)]: Displacement from a simulation of the Diana model of bridge 705, with a 100 kN point-load placed at $x = 92.406$ meters and $z = 12.405$ meters. The responses in this Figure match closely to the responses in Figure [[fig:comp-os-c-y]] from simulation with OpenSees.
[[./saved-images/diana-comp/c-diana-y-translation.pdf]]

#+NAME: fig:comp-os-c-y
#+CAPTION[Displacement in OpenSees from a point load (C)]: Displacement from a simulation of the generated FEM of bridge 705 for OpenSees, with a 100 kN point-load placed at $x = 92.406$ meters and $z = 12.405$ meters. The responses in this Figure match closely to the responses in Figure [[fig:comp-diana-c-y]] from simulation with Diana.
[[./saved-images/diana-comp/c-y-translation.pdf]]

#+NAME: fig:comp-diana-c-s
#+CAPTION[Strain in Diana from a point load (C)]: Strain from a simulation of the Diana model of bridge 705, with a 100 kN point-load placed at $x = 92.406$ meters and $z = 12.405$ meters. The responses in this Figure match closely to the responses in Figure [[fig:comp-os-c-s]] from simulation with OpenSees.
[[./saved-images/diana-comp/c-diana-strain.pdf]]

#+NAME: fig:comp-os-c-s
#+CAPTION[Displacement in OpenSees from a point load (C)]: Strain from a simulation of the generated FEM of bridge 705 for OpenSees, with a 100 kN point-load placed at $x = 92.406$ meters and $z = 12.405$ meters. The responses in this Figure match closely to the responses in Figure [[fig:comp-diana-c-s]] from simulation with Diana.
[[./saved-images/diana-comp/c-strain.pdf]]

#+NAME: fig:comp-diana-d-y
#+CAPTION[Displacement in Diana from a point load (D)]: Displacement from a simulation of the Diana model of bridge 705, with a 100 kN point-load placed at $x = 101.765$ meters and $z = 3.974$ meters. The responses in this Figure match closely to the responses in Figure [[fig:comp-os-d-y]] from simulation with OpenSees.
[[./saved-images/diana-comp/d-diana-y-translation.pdf]]

#+NAME: fig:comp-os-d-y
#+CAPTION[Displacement in OpenSees from point load (D)]: Displacement from a simulation of the generated FEM of bridge 705 for OpenSees, with a 100 kN point-load placed at $x = 101.765$ meters and $z = 3.974$ meters. The responses in this Figure match closely to the responses in Figure [[fig:comp-diana-d-y]] from simulation with Diana.
[[./saved-images/diana-comp/d-y-translation.pdf]]

#+NAME: fig:comp-diana-d-s
#+CAPTION[Strain in Diana from a point load (D)]: Strain from a simulation of the Diana model of bridge 705, with a 100 kN point-load placed at $x = 101.765$ meters and $z = 3.974$ meters. The responses in this Figure match closely to the responses in Figure [[fig:comp-os-d-s]] from simulation with OpenSees.
[[./saved-images/diana-comp/d-diana-strain.pdf]]

#+NAME: fig:comp-os-d-s
#+CAPTION[Displacement in OpenSees from point load (D)]: Strain from a simulation of the generated FEM of bridge 705 for OpenSees, with a 100 kN point-load placed at $x = 101.765$ meters and $z = 3.974$ meters. The responses in this Figure match closely to the responses in Figure [[fig:comp-diana-d-s]] from simulation with Diana.
[[./saved-images/diana-comp/d-strain.pdf]]

#+LATEX: \clearpage
** Experimental Campaign
<<sec:app:expt>>

#+NAME: fig:noise-displa
#+CAPTION[Noise for vert. trans. sensors]: Unprocessed responses, and estimated noise, from vertical translation sensors in dynamic test 1 in the experimental campaign. The standard deviation of the noise is estimated on the result of fitting and subtracting a Savgol filter with window size 31 and degree 3 to the unprocessed data.
#+ATTR_LATEX: :height 1\textwidth
[[./saved-images/noise/noise-displa.pdf]]

#+NAME: fig:noise-strain
#+CAPTION[Noise for strain sensors]: Unprocessed responses, and estimated noise, from strain sensors in dynamic test 1 in the experimental campaign. The standard deviation of the noise is estimated on the result of fitting and subtracting Savgol filter with window size 31 and degree 3 to the unprocessed data.
#+ATTR_LATEX: :height 1\textwidth
[[./saved-images/noise/noise-strain.pdf]]

#+NAME: fig:truck-pos
#+CAPTION[Truck 1 positions in campaign]: Positions of the front axle of truck 1 during the experimental campaign. The positions are labeled as =S1= to =S13=. In this image the distance 1012.5mm is shown from the west abutment of the bridge to position =S1=. It should be noted that there is an additional 375mm to the west-most end of the bridge, this is the overlap of the abument and the bridge. This image is provided by TNO.
#+ATTR_LATEX: :float sideways
[[./images/truck-pos.png]]

#+NAME: tbl:sensor-pos
#+CAPTION[Sensors in the experimental campaign]: Sensors in the experimental campaign. Each sensor is given with an identifying label, position on the bridge deck, type of response the sensor is measuring, and company that installed the sensor.
| Label |     X | Z | Type | Company |
|-------+-------+---+------+---------|
|  0.49 | 0.465 | A |      |         |
|  0.14 | 0.130 | B |      |         |
| 0.162 | 0.180 | C |      |         |
|  0.13 | 0.128 | D |      |         |

#+NAME: fig:sensors-displa-0
#+ATTR_LATEX: :height 1\textwidth :placement [!p]
#+CAPTION[Time series of vert. trans. sensors U1-U3]: Responses of vertical translation at sensors U1-U3 to Truck 1 moving across bridge 705. The x-axis is the x position of the front axle of Truck 1 on bridge 705 and the y-axis is the vertical translation at each sensor due to the truck's loading. Each set of coloured scatter points are from a different labeled data source.
[[./saved-images/sensors/displa-0.pdf]]

#+NAME: fig:sensors-displa-1
#+ATTR_LATEX: :height 1\textwidth :placement [!p]
#+CAPTION[Time series of vert. trans. sensors U4-U6]: Responses of vertical translation at sensors U4-U6 to Truck 1 moving across bridge 705. The x-axis is the x position of the front axle of Truck 1 on bridge 705 and the y-axis is the vertical translation at each sensor due to the truck's loading. Each set of coloured scatter points are from a different labeled data source.
[[./saved-images/sensors/displa-1.pdf]]

#+NAME: fig:sensors-displa-2
#+ATTR_LATEX: :height 1\textwidth :placement [!p]
#+CAPTION[Time series of vert. trans. sensors U7-U9]: Responses of vertical translation at sensors U7-U9 to Truck 1 moving across bridge 705. The x-axis is the x position of the front axle of Truck 1 on bridge 705 and the y-axis is the vertical translation at each sensor due to the truck's loading. Each set of coloured scatter points are from a different labeled data source.
[[./saved-images/sensors/displa-2.pdf]]

#+NAME: fig:sensors-displa-3
#+ATTR_LATEX: :height 1\textwidth :placement [!p]
#+CAPTION[Time series of vert. trans. sensors U10-U12]: Responses of vertical translation at sensors U10-U12 to Truck 1 moving across bridge 705. The x-axis is the x position of the front axle of Truck 1 on bridge 705 and the y-axis is the vertical translation at each sensor due to the truck's loading. Each set of coloured scatter points are from a different labeled data source.
[[./saved-images/sensors/displa-3.pdf]]

#+NAME: fig:sensors-displa-4
#+ATTR_LATEX: :height 1\textwidth :placement [!p]
#+CAPTION[Time series of vert. trans. sensors U13-U15]: Responses of vertical translation at sensors U13-U15 to Truck 1 moving across bridge 705. The x-axis is the x position of the front axle of Truck 1 on bridge 705 and the y-axis is the vertical translation at each sensor due to the truck's loading. Each set of coloured scatter points are from a different labeled data source.
[[./saved-images/sensors/displa-4.pdf]]

#+NAME: fig:sensors-displa-5
#+ATTR_LATEX: :height 1\textwidth :placement [!p]
#+CAPTION[Time series of vert. trans. sensors U16-U18]: Responses of vertical translation at sensors U16-U18 to Truck 1 moving across bridge 705. The x-axis is the x position of the front axle of Truck 1 on bridge 705 and the y-axis is the vertical translation at each sensor due to the truck's loading. Each set of coloured scatter points are from a different labeled data source.
[[./saved-images/sensors/displa-5.pdf]]

#+NAME: fig:sensors-displa-6
#+ATTR_LATEX: :height 1\textwidth :placement [!p]
#+CAPTION[Time series of vert. trans. sensors U19-U21]: Responses of vertical translation at sensors U19-U21 to Truck 1 moving across bridge 705. The x-axis is the x position of the front axle of Truck 1 on bridge 705 and the y-axis is the vertical translation at each sensor due to the truck's loading. Each set of coloured scatter points are from a different labeled data source.
[[./saved-images/sensors/displa-6.pdf]]

#+NAME: fig:sensors-displa-7
#+ATTR_LATEX: :height 1\textwidth :placement [!p]
#+CAPTION[Time series of vert. trans. sensors U22-U24]: Responses of vertical translation at sensors U22-U24 to Truck 1 moving across bridge 705. The x-axis is the x position of the front axle of Truck 1 on bridge 705 and the y-axis is the vertical translation at each sensor due to the truck's loading. Each set of coloured scatter points are from a different labeled data source.
[[./saved-images/sensors/displa-7.pdf]]

#+NAME: fig:sensors-displa-9
#+ATTR_LATEX: :height 1\textwidth :placement [!p]
#+CAPTION[Time series of vert. trans. sensors U28-U29]: Responses of vertical translation at sensors U28-U29 to Truck 1 moving across bridge 705. The x-axis is the x position of the front axle of Truck 1 on bridge 705 and the y-axis is the vertical translation at each sensor due to the truck's loading. Each set of coloured scatter points are from a different labeled data source.
[[./saved-images/sensors/displa-9.pdf]]

#+NAME: fig:sensors-strain-t0
#+ATTR_LATEX: :height 1\textwidth :placement [!p]
#+CAPTION[Time series of strain sensors T1, T10 and T11]: Responses of longitudinal strain at sensors T1, T10 and T11 to Truck 1 moving across bridge 705. The x-axis is the x position of the front axle of Truck 1 on bridge 705 and the y-axis is the strain at each sensor due to the truck's loading. Each set of coloured scatter points are from a different labeled data source.
[[./saved-images/sensors/strain-T-0.pdf]]

#+NAME: fig:sensors-strain-t1
#+ATTR_LATEX: :height 1\textwidth :placement [!p]
#+CAPTION[Time series of strain sensors T12-T14]: Responses of longitudinal strain at sensors T12-T14 to Truck 1 moving across bridge 705. The x-axis is the x position of the front axle of Truck 1 on bridge 705 and the y-axis is the strain at each sensor due to the truck's loading. Each set of coloured scatter points are from a different labeled data source.
[[./saved-images/sensors/strain-T-1.pdf]]

#+NAME: fig:sensors-strain-t2
#+ATTR_LATEX: :height 1\textwidth :placement [!p]
#+CAPTION[Time series of strain sensors T15-T17]: Responses of longitudinal strain at sensors T15-T17 to Truck 1 moving across bridge 705. The x-axis is the x position of the front axle of Truck 1 on bridge 705 and the y-axis is the strain at each sensor due to the truck's loading. Each set of coloured scatter points are from a different labeled data source.
[[./saved-images/sensors/strain-T-2.pdf]]

#+NAME: fig:sensors-strain-t3
#+ATTR_LATEX: :height 1\textwidth :placement [!p]
#+CAPTION[Time series of strain sensors T18, T19 & T2]: Responses of longitudinal strain at sensors T18, T19 and T2 to Truck 1 moving across bridge 705. The x-axis is the x position of the front axle of Truck 1 on bridge 705 and the y-axis is the strain at each sensor due to the truck's loading. Each set of coloured scatter points are from a different labeled data source.
[[./saved-images/sensors/strain-T-3.pdf]]

#+NAME: fig:sensors-strain-t4
#+ATTR_LATEX: :height 1\textwidth :placement [!p]
#+CAPTION[Time series of strain sensors T20, T3 & T4]: Responses of longitudinal strain at sensors T20, T3 and T4 to Truck 1 moving across bridge 705. The x-axis is the x position of the front axle of Truck 1 on bridge 705 and the y-axis is the strain at each sensor due to the truck's loading. Each set of coloured scatter points are from a different labeled data source.
[[./saved-images/sensors/strain-T-4.pdf]]

#+NAME: fig:sensors-strain-t5
#+ATTR_LATEX: :height 1\textwidth :placement [!p]
#+CAPTION[Time series of strain sensors T5-T7]: Responses of longitudinal strain at sensors T5-T7 to Truck 1 moving across bridge 705. The x-axis is the x position of the front axle of Truck 1 on bridge 705 and the y-axis is the strain at each sensor due to the truck's loading. Each set of coloured scatter points are from a different labeled data source.
[[./saved-images/sensors/strain-T-5.pdf]]

#+NAME: fig:sensors-strain-t5
#+ATTR_LATEX: :height 1\textwidth :placement [!p]
#+CAPTION[Time series of strain sensors T8-T9]: Responses of longitudinal strain at sensors T8-T9 to Truck 1 moving across bridge 705. The x-axis is the x position of the front axle of Truck 1 on bridge 705 and the y-axis is the strain at each sensor due to the truck's loading. Each set of coloured scatter points are from a different labeled data source.
[[./saved-images/sensors/strain-T-6.pdf]]

#+NAME: fig:sensors-strain-o1
#+ATTR_LATEX: :height 1\textwidth :placement [!p]
#+CAPTION[Time series of strain sensors O12, O2 & O3]: Responses of longitudinal strain at sensors O12, O2 and O3 to Truck 1 moving across bridge 705. The x-axis is the x position of the front axle of Truck 1 on bridge 705 and the y-axis is the strain at each sensor due to the truck's loading. Each set of coloured scatter points are from a different labeled data source.
[[./saved-images/sensors/strain-O-1.pdf]]

#+LATEX: \clearpage
** Pier Settlement
<<sec:app:pier>>

#+NAME: fig:pd-5d-axis
#+CAPTION[Displacement from pier settlement with AxisVM]: Displacement recorded in AxisVM when a pier (5) of bridge 705 is displaced by $\SI{1}{\meter}$. The colours indicate the amount that the bridge deck is displaced, dark blue is the minimum displacement recorded and dark red the maximum.
#+ATTR_LATEX: :height 0.5\textwidth :placement [h]
[[./saved-images/piers/5-axis-displa.pdf]]

#+NAME: fig:pd-5d-os
#+CAPTION[Displacement from pier (5) settlement with OpenSees]: Displacement recorded with OpenSees when a pier (5) of the generated FEM of bridge 705 is displaced by $\SI{1}{\meter}$. The colours indicate the amount that the bridge deck is displaced, dark blue is the minimum displacement recorded and dark red the maximum.
#+ATTR_LATEX: :height 0.5\textwidth :placement [h]
[[./saved-images/piers/pier-5-y-translation.pdf]]

#+NAME: fig:pd-5s-axis
#+CAPTION[Stress from pier (5) settlement with AxisVM]: Stress recorded in AxisVM when a pier (5) of bridge 705 is displaced by $\SI{1}{\meter}$. The colours indicate the amount that the bridge deck is displaced, dark red is the maximum stress recorded and dark blue the maximum.
#+ATTR_LATEX: :height 0.5\textwidth :placement [h]
[[./saved-images/piers/5-axis-stress.pdf]]

#+NAME: fig:pd-5s-os
#+CAPTION[Stress from pier (5) settlement with OpenSees]: Stress recorded with OpenSees when a pier (5) of the generated FEM of bridge 705 is displaced by $\SI{1}{\meter}$. The colours indicate the amount that the bridge deck is displaced, dark red is the maximum stress recorded and dark blue the minimum.
#+ATTR_LATEX: :height 0.5\textwidth :placement [h]
[[./saved-images/piers/pier-5-stress.pdf]]

#+NAME: fig:pier-5-nesw
#+CAPTION[Strain convergence at distances from pier 5]: Strain convergence at increasing distance from the north-western (NW) point of pier 5. Each plotted line shows the strain response at a point, as model size is increased. In each plot the lines are coloured to show the distance from the north-western point of pier 5. The points the strains are collected at are at increasing distance in one of the cardinal directions from the NW point of pier 5.
[[./saved-images/piers/nesw-pier-5.pdf]]

** Temperature Load

#+ATTR_LaTeX: :placement [!p]
#+NAME: fig:thermal-linear-y-axis
#+CAPTION[Vert. trans. from linear temperature loading with AxisVM]: Vertical translation from $\SI{+1}{\celsius}$ linear temperature loading of the deck of bridge 705 with AxisVM.
[[./saved-images/thermal/axis-ytrans-moment.pdf]]

#+NAME: fig:thermal-linear-y-os
#+CAPTION[Vert. trans. from linear temperature loading with OpenSees]: Vertical translation from $\SI{+1}{\celsius}$ linear tempearature loading of the deck of bridge 705 with OpenSees.
[[./saved-images/thermal/thermal-deck-unit-moment_load-y-translation.pdf]]

#+ATTR_LaTeX: :placement [!p]
#+NAME: fig:thermal-linear-s-axis
#+CAPTION[Stress from linear temperature loading with AxisVM]: Stress from $\SI{+1}{\celsius}$ linear temperature loading of the deck of bridge 705 with AxisVM.
[[./saved-images/thermal/axis-stress-moment.pdf]]

#+NAME: fig:thermal-linear-s-os
#+CAPTION[Stress from linear temperature loading with OpenSees]: Stress from $\SI{+1}{\celsius}$ linear temperature loading of the deck of bridge 705 with OpenSees.
[[./saved-images/thermal/thermal-deck-unit-moment_load-stress.pdf]]

#+LATEX: \clearpage
bibliographystyle:ieeetr

bibliography:myrefs.bib
